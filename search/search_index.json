{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"calico Jsonnet library","text":"<p>This library is generated with <code>k8s</code>.</p> <ul> <li>3.21</li> <li>3.22</li> <li>3.23</li> <li>3.24</li> <li>3.25</li> <li>3.17</li> <li>3.18</li> <li>3.19</li> <li>3.20</li> </ul>"},{"location":"3.17/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.17/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.17/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.17/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.17/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.17/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.17/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.17/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.17/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.17/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.17/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.17/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.17/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.17/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.17/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.17/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.17/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.17/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.17/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.17/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.17/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enabled\\\" or \\\"Disabled\\\". [Default: DoNothing]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \u201cDROP\u201d action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \u201cINPUT\u201d chain; Calico will insert its rules at the top of that chain, then \u201cRETURN\u201d packets to the \u201cINPUT\u201d chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \u201ctcp\u201d. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\""},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \u201ctcp\u201d. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\" <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \u201ctcp\u201d. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\""},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \u201ctcp\u201d. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\" <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \u201ctcp\u201d. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\""},{"location":"3.17/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \u201ctcp\u201d. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\""},{"location":"3.17/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.17/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.17/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.17/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.17/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.17/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.17/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \u201ceth0\u201d) are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.17/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.17/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.17/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":""},{"location":"3.17/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.17/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.17/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.17/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.17/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.17/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.17/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.17/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.17/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.17/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.17/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.17/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.17/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.17/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.17/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \u201cmy_label\u201d. \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \u201cmy_label\u201d. \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.17/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.17/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.17/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.17/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.17/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.17/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.17/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.18/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.18/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.18/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.18/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.18/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.18/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.18/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.18/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.18/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.18/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.18/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.18/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.18/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.18/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.18/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.18/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.18/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.18/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.18/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.18/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.18/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enabled\\\" or \\\"Disabled\\\". [Default: DoNothing]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\""},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\" <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\""},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\" <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\""},{"location":"3.18/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a comma-delimited list of UDP/TCP ports that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. Each port should be specified as tcp: or udp:. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\""},{"location":"3.18/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.18/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.18/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.18/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.18/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.18/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.18/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.18/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.18/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.18/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":""},{"location":"3.18/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.18/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.18/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.18/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.18/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.18/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.18/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.18/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.18/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.18/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.18/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.18/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.18/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.18/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.18/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.18/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.18/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.18/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.18/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.18/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.18/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.18/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.19/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.19/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.19/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.19/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.19/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.19/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.19/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.19/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.19/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.19/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.19/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.19/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.19/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.19/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.19/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.19/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.19/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.19/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.19/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.19/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfExtToServiceConnmark(bpfExtToServiceConnmark)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.19/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enabled\\\" or \\\"Disabled\\\". [Default: DoNothing]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfexttoserviceconnmark","title":"fn spec.withBpfExtToServiceConnmark","text":"<pre><code>withBpfExtToServiceConnmark(bpfExtToServiceConnmark)\n</code></pre> <p>\"BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing intepreted by RPF check. [Default: 0]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithnet","title":"fn spec.failsafeInboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithnet","title":"fn spec.failsafeOutboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.19/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.19/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.19/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.19/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.19/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.19/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.19/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.19/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.19/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":""},{"location":"3.19/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.19/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.19/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.19/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.19/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.19/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.19/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.19/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.19/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.19/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.19/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.19/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.19/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.19/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.19/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and Selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.19/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.19/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.19/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.19/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.19/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.19/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.19/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.20/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.20/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.20/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.20/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.20/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.20/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.20/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.20/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.20/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withMaxRestartTime(maxRestartTime)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.20/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithmaxrestarttime","title":"fn spec.withMaxRestartTime","text":"<pre><code>withMaxRestartTime(maxRestartTime)\n</code></pre> <p>\"Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.20/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.20/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.20/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.20/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.20/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.20/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.20/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.20/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.20/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.20/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfExtToServiceConnmark(bpfExtToServiceConnmark)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.20/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enabled\\\" or \\\"Disabled\\\". [Default: DoNothing]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfexttoserviceconnmark","title":"fn spec.withBpfExtToServiceConnmark","text":"<pre><code>withBpfExtToServiceConnmark(bpfExtToServiceConnmark)\n</code></pre> <p>\"BPFExtToServiceConnmark in BPF mode, controls a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing intepreted by RPF check. [Default: 0]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithprometheuswireguardmetricsenabled","title":"fn spec.withPrometheusWireGuardMetricsEnabled","text":"<pre><code>withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)\n</code></pre> <p>\"PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithwireguardhostencryptionenabled","title":"fn spec.withWireguardHostEncryptionEnabled","text":"<pre><code>withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)\n</code></pre> <p>\"WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithnet","title":"fn spec.failsafeInboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithnet","title":"fn spec.failsafeOutboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.20/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.20/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.20/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.20/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.20/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.20/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.20/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.20/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.20/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":""},{"location":"3.20/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.20/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.20/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.20/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.20/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.20/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.20/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.20/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.20/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.20/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.20/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.20/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withLeakGracePeriod(leakGracePeriod)</code></li> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithleakgraceperiod","title":"fn spec.controllers.node.withLeakGracePeriod","text":"<pre><code>withLeakGracePeriod(leakGracePeriod)\n</code></pre> <p>\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.20/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.20/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.20/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Ports, NotPorts, Nets, NotNets or ServiceAccounts. \\n Only valid on egress rules.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.20/crd/v1/networkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.20/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.20/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.20/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.20/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.20/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.20/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.20/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.21/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.21/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.21/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipReservation</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.21/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.21/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.21/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.21/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.21/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.21/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withMaxRestartTime(maxRestartTime)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.21/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithmaxrestarttime","title":"fn spec.withMaxRestartTime","text":"<pre><code>withMaxRestartTime(maxRestartTime)\n</code></pre> <p>\"Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.21/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.21/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.21/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.21/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.21/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.21/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.21/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.21/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.21/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.21/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfExtToServiceConnmark(bpfExtToServiceConnmark)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withBpfPSNATPorts(bpfPSNATPorts)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withFloatingIPs(floatingIPs)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.21/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enable\\\" or \\\"Disable\\\". [Default: DoNothing]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfexttoserviceconnmark","title":"fn spec.withBpfExtToServiceConnmark","text":"<pre><code>withBpfExtToServiceConnmark(bpfExtToServiceConnmark)\n</code></pre> <p>\"BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing intepreted by RPF check. [Default: 0]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithbpfpsnatports","title":"fn spec.withBpfPSNATPorts","text":"<pre><code>withBpfPSNATPorts(bpfPSNATPorts)\n</code></pre> <p>\"BPFPSNATPorts sets the range from which we randomly pick a port if there is a source port collision. This should be within the ephemeral range as defined by RFC 6056 (1024\u201365535) and preferably outside the  ephemeral ranges used by common operating systems. Linux uses 32768\u201360999, while others mostly use the IANA defined range 49152\u201365535. It is not necessarily a problem if this range overlaps with the operating systems. Both ends of the range are inclusive. [Default: 20000:29999]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithfloatingips","title":"fn spec.withFloatingIPs","text":"<pre><code>withFloatingIPs(floatingIPs)\n</code></pre> <p>\"FloatingIPs configures whether or not Felix will program floating IP addresses.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithprometheuswireguardmetricsenabled","title":"fn spec.withPrometheusWireGuardMetricsEnabled","text":"<pre><code>withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)\n</code></pre> <p>\"PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithwireguardhostencryptionenabled","title":"fn spec.withWireguardHostEncryptionEnabled","text":"<pre><code>withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)\n</code></pre> <p>\"WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithnet","title":"fn spec.failsafeInboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithnet","title":"fn spec.failsafeOutboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.21/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.21/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.21/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.21/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.21/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.21/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.21/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.21/crd/v1/ipReservation/","title":"crd.v1.ipReservation","text":""},{"location":"3.21/crd/v1/ipReservation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withReservedCIDRs(reservedCIDRs)</code></li> <li><code>fn withReservedCIDRsMixin(reservedCIDRs)</code></li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/ipReservation/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/ipReservation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPReservation</p>"},{"location":"3.21/crd/v1/ipReservation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/ipReservation/#obj-spec","title":"obj spec","text":"<p>\"IPReservationSpec contains the specification for an IPReservation resource.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-specwithreservedcidrs","title":"fn spec.withReservedCIDRs","text":"<pre><code>withReservedCIDRs(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p>"},{"location":"3.21/crd/v1/ipReservation/#fn-specwithreservedcidrsmixin","title":"fn spec.withReservedCIDRsMixin","text":"<pre><code>withReservedCIDRsMixin(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.21/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.21/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":""},{"location":"3.21/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.21/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.21/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.21/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.21/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.21/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.21/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.21/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.21/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.21/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.21/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.21/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withLeakGracePeriod(leakGracePeriod)</code></li> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithleakgraceperiod","title":"fn spec.controllers.node.withLeakGracePeriod","text":"<pre><code>withLeakGracePeriod(leakGracePeriod)\n</code></pre> <p>\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.21/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.21/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.21/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.21/crd/v1/networkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.21/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.21/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.21/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.21/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.21/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.21/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.21/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.22/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.22/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.22/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipReservation</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.22/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.22/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.22/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.22/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.22/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.22/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withMaxRestartTime(maxRestartTime)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.22/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithmaxrestarttime","title":"fn spec.withMaxRestartTime","text":"<pre><code>withMaxRestartTime(maxRestartTime)\n</code></pre> <p>\"Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.22/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.22/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.22/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.22/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.22/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.22/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.22/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.22/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.22/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.22/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfExtToServiceConnmark(bpfExtToServiceConnmark)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withBpfPSNATPorts(bpfPSNATPorts)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogDebugFilenameRegex(logDebugFilenameRegex)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.22/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enable\\\" or \\\"Disable\\\". [Default: DoNothing]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfexttoserviceconnmark","title":"fn spec.withBpfExtToServiceConnmark","text":"<pre><code>withBpfExtToServiceConnmark(bpfExtToServiceConnmark)\n</code></pre> <p>\"BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing intepreted by RPF check. [Default: 0]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithbpfpsnatports","title":"fn spec.withBpfPSNATPorts","text":"<pre><code>withBpfPSNATPorts(bpfPSNATPorts)\n</code></pre> <p>\"BPFPSNATPorts sets the range from which we randomly pick a port if there is a source port collision. This should be within the ephemeral range as defined by RFC 6056 (1024\u201365535) and preferably outside the  ephemeral ranges used by common operating systems. Linux uses 32768\u201360999, while others mostly use the IANA defined range 49152\u201365535. It is not necessarily a problem if this range overlaps with the operating systems. Both ends of the range are inclusive. [Default: 20000:29999]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithlogdebugfilenameregex","title":"fn spec.withLogDebugFilenameRegex","text":"<pre><code>withLogDebugFilenameRegex(logDebugFilenameRegex)\n</code></pre> <p>\"LogDebugFilenameRegex controls which source code files have their Debug log output included in the logs. Only logs from files with names that match the given regular expression are included.  The filter only applies to Debug level logs.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithprometheuswireguardmetricsenabled","title":"fn spec.withPrometheusWireGuardMetricsEnabled","text":"<pre><code>withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)\n</code></pre> <p>\"PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithwireguardhostencryptionenabled","title":"fn spec.withWireguardHostEncryptionEnabled","text":"<pre><code>withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)\n</code></pre> <p>\"WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithnet","title":"fn spec.failsafeInboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithnet","title":"fn spec.failsafeOutboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.22/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.22/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.22/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.22/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.22/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.22/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.22/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.22/crd/v1/ipReservation/","title":"crd.v1.ipReservation","text":""},{"location":"3.22/crd/v1/ipReservation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withReservedCIDRs(reservedCIDRs)</code></li> <li><code>fn withReservedCIDRsMixin(reservedCIDRs)</code></li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/ipReservation/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/ipReservation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPReservation</p>"},{"location":"3.22/crd/v1/ipReservation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/ipReservation/#obj-spec","title":"obj spec","text":"<p>\"IPReservationSpec contains the specification for an IPReservation resource.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-specwithreservedcidrs","title":"fn spec.withReservedCIDRs","text":"<pre><code>withReservedCIDRs(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p>"},{"location":"3.22/crd/v1/ipReservation/#fn-specwithreservedcidrsmixin","title":"fn spec.withReservedCIDRsMixin","text":"<pre><code>withReservedCIDRsMixin(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.22/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.22/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":""},{"location":"3.22/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.22/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.22/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.22/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.22/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.22/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.22/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.22/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.22/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.22/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.22/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.22/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDebugProfilePort(debugProfilePort)</code></li> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withLeakGracePeriod(leakGracePeriod)</code></li> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-specwithdebugprofileport","title":"fn spec.withDebugProfilePort","text":"<pre><code>withDebugProfilePort(debugProfilePort)\n</code></pre> <p>\"DebugProfilePort configures the port to serve memory and cpu profiles on. If not specified, profiling is disabled.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithleakgraceperiod","title":"fn spec.controllers.node.withLeakGracePeriod","text":"<pre><code>withLeakGracePeriod(leakGracePeriod)\n</code></pre> <p>\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.22/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.22/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.22/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.22/crd/v1/networkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.22/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.22/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.22/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.22/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.22/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.22/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.22/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.23/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.23/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.23/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipReservation</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.23/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.23/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.23/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.23/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.23/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.23/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withMaxRestartTime(maxRestartTime)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.23/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithmaxrestarttime","title":"fn spec.withMaxRestartTime","text":"<pre><code>withMaxRestartTime(maxRestartTime)\n</code></pre> <p>\"Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.23/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.23/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.23/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.23/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.23/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.23/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.23/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.23/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.23/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.23/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfExtToServiceConnmark(bpfExtToServiceConnmark)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withBpfPSNATPorts(bpfPSNATPorts)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withFloatingIPs(floatingIPs)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogDebugFilenameRegex(logDebugFilenameRegex)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.23/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enable\\\" or \\\"Disable\\\". [Default: DoNothing]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfexttoserviceconnmark","title":"fn spec.withBpfExtToServiceConnmark","text":"<pre><code>withBpfExtToServiceConnmark(bpfExtToServiceConnmark)\n</code></pre> <p>\"BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing intepreted by RPF check. [Default: 0]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithbpfpsnatports","title":"fn spec.withBpfPSNATPorts","text":"<pre><code>withBpfPSNATPorts(bpfPSNATPorts)\n</code></pre> <p>\"BPFPSNATPorts sets the range from which we randomly pick a port if there is a source port collision. This should be within the ephemeral range as defined by RFC 6056 (1024\u201365535) and preferably outside the  ephemeral ranges used by common operating systems. Linux uses 32768\u201360999, while others mostly use the IANA defined range 49152\u201365535. It is not necessarily a problem if this range overlaps with the operating systems. Both ends of the range are inclusive. [Default: 20000:29999]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithfloatingips","title":"fn spec.withFloatingIPs","text":"<pre><code>withFloatingIPs(floatingIPs)\n</code></pre> <p>\"FloatingIPs configures whether or not Felix will program floating IP addresses.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithlogdebugfilenameregex","title":"fn spec.withLogDebugFilenameRegex","text":"<pre><code>withLogDebugFilenameRegex(logDebugFilenameRegex)\n</code></pre> <p>\"LogDebugFilenameRegex controls which source code files have their Debug log output included in the logs. Only logs from files with names that match the given regular expression are included.  The filter only applies to Debug level logs.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithprometheuswireguardmetricsenabled","title":"fn spec.withPrometheusWireGuardMetricsEnabled","text":"<pre><code>withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)\n</code></pre> <p>\"PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled. [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithwireguardhostencryptionenabled","title":"fn spec.withWireguardHostEncryptionEnabled","text":"<pre><code>withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)\n</code></pre> <p>\"WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the Wireguard interface. [Default: wg.calico]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by Wireguard. [Default: 51820]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithnet","title":"fn spec.failsafeInboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithnet","title":"fn spec.failsafeOutboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Calico programs additional Linux route tables for various purposes.  RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.23/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.23/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.23/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.23/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.23/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.23/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.23/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.23/crd/v1/ipReservation/","title":"crd.v1.ipReservation","text":""},{"location":"3.23/crd/v1/ipReservation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withReservedCIDRs(reservedCIDRs)</code></li> <li><code>fn withReservedCIDRsMixin(reservedCIDRs)</code></li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/ipReservation/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/ipReservation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPReservation</p>"},{"location":"3.23/crd/v1/ipReservation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/ipReservation/#obj-spec","title":"obj spec","text":"<p>\"IPReservationSpec contains the specification for an IPReservation resource.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-specwithreservedcidrs","title":"fn spec.withReservedCIDRs","text":"<pre><code>withReservedCIDRs(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p>"},{"location":"3.23/crd/v1/ipReservation/#fn-specwithreservedcidrsmixin","title":"fn spec.withReservedCIDRsMixin","text":"<pre><code>withReservedCIDRsMixin(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.23/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withSequenceNumber(sequenceNumber)</code></li> <li><code>fn withSequenceNumberForAllocation(sequenceNumberForAllocation)</code></li> <li><code>fn withSequenceNumberForAllocationMixin(sequenceNumberForAllocation)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.23/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre> <p>\"Affinity of the block, if this block has one. If set, it will be of the form \\\"host:\\\". If not set, this block is not affine to a host.\""},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre> <p>\"Array of allocations in-use within this block. nil entries mean the allocation is free. For non-nil entries at index i, the index is the ordinal of the allocation within this block and the value is the index of the associated attributes in the Attributes array.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>\"Array of allocations in-use within this block. nil entries mean the allocation is free. For non-nil entries at index i, the index is the ordinal of the allocation within this block and the value is the index of the associated attributes in the Attributes array.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"The block's CIDR.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted is an internal boolean used to workaround a limitation in the Kubernetes API whereby deletion will not return a conflict error if the block has been updated. It should not be set manually.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithsequencenumber","title":"fn spec.withSequenceNumber","text":"<pre><code>withSequenceNumber(sequenceNumber)\n</code></pre> <p>\"We store a sequence number that is updated each time the block is written. Each allocation will also store the sequence number of the block at the time of its creation. When releasing an IP, passing the sequence number associated with the allocation allows us to protect against a race condition and ensure the IP hasn't been released and re-allocated since the release request.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithsequencenumberforallocation","title":"fn spec.withSequenceNumberForAllocation","text":"<pre><code>withSequenceNumberForAllocation(sequenceNumberForAllocation)\n</code></pre> <p>\"Map of allocated ordinal within the block to sequence number of the block at the time of allocation. Kubernetes does not allow numerical keys for maps, so the key is cast to a string.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithsequencenumberforallocationmixin","title":"fn spec.withSequenceNumberForAllocationMixin","text":"<pre><code>withSequenceNumberForAllocationMixin(sequenceNumberForAllocation)\n</code></pre> <p>\"Map of allocated ordinal within the block to sequence number of the block at the time of allocation. Kubernetes does not allow numerical keys for maps, so the key is cast to a string.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre> <p>\"StrictAffinity on the IPAMBlock is deprecated and no longer used by the code. Use IPAMConfig StrictAffinity instead.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre> <p>\"Unallocated is an ordered list of allocations which are free in the block.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>\"Unallocated is an ordered list of allocations which are free in the block.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":"<p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.23/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.23/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.23/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.23/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.23/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.23/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.23/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.23/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.23/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.23/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.23/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDebugProfilePort(debugProfilePort)</code></li> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withLeakGracePeriod(leakGracePeriod)</code></li> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-specwithdebugprofileport","title":"fn spec.withDebugProfilePort","text":"<pre><code>withDebugProfilePort(debugProfilePort)\n</code></pre> <p>\"DebugProfilePort configures the port to serve memory and cpu profiles on. If not specified, profiling is disabled.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithleakgraceperiod","title":"fn spec.controllers.node.withLeakGracePeriod","text":"<pre><code>withLeakGracePeriod(leakGracePeriod)\n</code></pre> <p>\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.23/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.23/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.23/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.23/crd/v1/networkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.23/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.23/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.23/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.23/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.23/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.23/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.23/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.24/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.24/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.24/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipReservation</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.24/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withBindMode(bindMode)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeMeshMaxRestartTime(nodeMeshMaxRestartTime)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.nodeMeshPassword</code><ul> <li><code>obj spec.nodeMeshPassword.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithbindmode","title":"fn spec.withBindMode","text":"<pre><code>withBindMode(bindMode)\n</code></pre> <p>\"BindMode indicates whether to listen for BGP connections on all addresses (None) or only on the node's canonical IP address Node.Spec.BGP.IPvXAddress (NodeIP). Default behaviour is to listen for BGP connections on all addresses.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithnodemeshmaxrestarttime","title":"fn spec.withNodeMeshMaxRestartTime","text":"<pre><code>withNodeMeshMaxRestartTime(nodeMeshMaxRestartTime)\n</code></pre> <p>\"Time to allow for software restart for node-to-mesh peerings.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used. This field can only be set on the default BGPConfiguration instance and requires that NodeMesh is enabled\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-specnodemeshpassword","title":"obj spec.nodeMeshPassword","text":"<p>\"Optional BGP password for full node-to-mesh peerings. This field can only be set on the default BGPConfiguration instance and requires that NodeMesh is enabled\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-specnodemeshpasswordsecretkeyref","title":"obj spec.nodeMeshPassword.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specnodemeshpasswordsecretkeyrefwithkey","title":"fn spec.nodeMeshPassword.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specnodemeshpasswordsecretkeyrefwithname","title":"fn spec.nodeMeshPassword.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specnodemeshpasswordsecretkeyrefwithoptional","title":"fn spec.nodeMeshPassword.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.24/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.24/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.24/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.24/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withMaxRestartTime(maxRestartTime)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withNumAllowedLocalASNumbers(numAllowedLocalASNumbers)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.24/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithmaxrestarttime","title":"fn spec.withMaxRestartTime","text":"<pre><code>withMaxRestartTime(maxRestartTime)\n</code></pre> <p>\"Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithnumallowedlocalasnumbers","title":"fn spec.withNumAllowedLocalASNumbers","text":"<pre><code>withNumAllowedLocalASNumbers(numAllowedLocalASNumbers)\n</code></pre> <p>\"Maximum number of local AS numbers that are allowed in the AS path for received routes. This removes BGP loop prevention and should only be used if absolutely necesssary.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.24/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.24/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.24/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.24/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.24/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.24/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.24/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.24/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.24/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.24/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfEnforceRPF(bpfEnforceRPF)</code></li> <li><code>fn withBpfExtToServiceConnmark(bpfExtToServiceConnmark)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withBpfMapSizeConntrack(bpfMapSizeConntrack)</code></li> <li><code>fn withBpfMapSizeIPSets(bpfMapSizeIPSets)</code></li> <li><code>fn withBpfMapSizeIfState(bpfMapSizeIfState)</code></li> <li><code>fn withBpfMapSizeNATAffinity(bpfMapSizeNATAffinity)</code></li> <li><code>fn withBpfMapSizeNATBackend(bpfMapSizeNATBackend)</code></li> <li><code>fn withBpfMapSizeNATFrontend(bpfMapSizeNATFrontend)</code></li> <li><code>fn withBpfMapSizeRoute(bpfMapSizeRoute)</code></li> <li><code>fn withBpfPSNATPorts(bpfPSNATPorts)</code></li> <li><code>fn withBpfPolicyDebugEnabled(bpfPolicyDebugEnabled)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDataplaneWatchdogTimeout(dataplaneWatchdogTimeout)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDeviceRouteSourceAddressIPv6(deviceRouteSourceAddressIPv6)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withFloatingIPs(floatingIPs)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogDebugFilenameRegex(logDebugFilenameRegex)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withRouteSyncDisabled(routeSyncDisabled)</code></li> <li><code>fn withRouteTableRanges(routeTableRanges)</code></li> <li><code>fn withRouteTableRangesMixin(routeTableRanges)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanMTUV6(vxlanMTUV6)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardEnabledV6(wireguardEnabledV6)</code></li> <li><code>fn withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardInterfaceNameV6(wireguardInterfaceNameV6)</code></li> <li><code>fn withWireguardKeepAlive(wireguardKeepAlive)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardListeningPortV6(wireguardListeningPortV6)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardMTUV6(wireguardMTUV6)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withWorkloadSourceSpoofing(workloadSourceSpoofing)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.routeTableRanges</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.24/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enable\\\" or \\\"Disable\\\". [Default: DoNothing]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfenforcerpf","title":"fn spec.withBpfEnforceRPF","text":"<pre><code>withBpfEnforceRPF(bpfEnforceRPF)\n</code></pre> <p>\"BPFEnforceRPF enforce strict RPF on all interfaces with BPF programs regardless of what is the per-interfaces or global setting. Possible values are Disabled or Strict. [Default: Strict]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfexttoserviceconnmark","title":"fn spec.withBpfExtToServiceConnmark","text":"<pre><code>withBpfExtToServiceConnmark(bpfExtToServiceConnmark)\n</code></pre> <p>\"BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing interpreted by RPF check. [Default: 0]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeconntrack","title":"fn spec.withBpfMapSizeConntrack","text":"<pre><code>withBpfMapSizeConntrack(bpfMapSizeConntrack)\n</code></pre> <p>\"BPFMapSizeConntrack sets the size for the conntrack map.  This map must be large enough to hold an entry for each active connection.  Warning: changing the size of the conntrack map can cause disruption.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeipsets","title":"fn spec.withBpfMapSizeIPSets","text":"<pre><code>withBpfMapSizeIPSets(bpfMapSizeIPSets)\n</code></pre> <p>\"BPFMapSizeIPSets sets the size for ipsets map.  The IP sets map must be large enough to hold an entry for each endpoint matched by every selector in the source/destination matches in network policy.  Selectors such as \\\"all()\\\" can result in large numbers of entries (one entry per endpoint in that case).\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeifstate","title":"fn spec.withBpfMapSizeIfState","text":"<pre><code>withBpfMapSizeIfState(bpfMapSizeIfState)\n</code></pre> <p>\"BPFMapSizeIfState sets the size for ifstate map.  The ifstate map must be large enough to hold an entry for each device (host + workloads) on a host.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfmapsizenataffinity","title":"fn spec.withBpfMapSizeNATAffinity","text":"<pre><code>withBpfMapSizeNATAffinity(bpfMapSizeNATAffinity)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfmapsizenatbackend","title":"fn spec.withBpfMapSizeNATBackend","text":"<pre><code>withBpfMapSizeNATBackend(bpfMapSizeNATBackend)\n</code></pre> <p>\"BPFMapSizeNATBackend sets the size for nat back end map. This is the total number of endpoints. This is mostly more than the size of the number of services.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfmapsizenatfrontend","title":"fn spec.withBpfMapSizeNATFrontend","text":"<pre><code>withBpfMapSizeNATFrontend(bpfMapSizeNATFrontend)\n</code></pre> <p>\"BPFMapSizeNATFrontend sets the size for nat front end map. FrontendMap should be large enough to hold an entry for each nodeport, external IP and each port in each service.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeroute","title":"fn spec.withBpfMapSizeRoute","text":"<pre><code>withBpfMapSizeRoute(bpfMapSizeRoute)\n</code></pre> <p>\"BPFMapSizeRoute sets the size for the routes map.  The routes map should be large enough to hold one entry per workload and a handful of entries per host (enough to cover its own IPs and tunnel IPs).\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfpsnatports","title":"fn spec.withBpfPSNATPorts","text":"<pre><code>withBpfPSNATPorts(bpfPSNATPorts)\n</code></pre> <p>\"BPFPSNATPorts sets the range from which we randomly pick a port if there is a source port collision. This should be within the ephemeral range as defined by RFC 6056 (1024\u201365535) and preferably outside the  ephemeral ranges used by common operating systems. Linux uses 32768\u201360999, while others mostly use the IANA defined range 49152\u201365535. It is not necessarily a problem if this range overlaps with the operating systems. Both ends of the range are inclusive. [Default: 20000:29999]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithbpfpolicydebugenabled","title":"fn spec.withBpfPolicyDebugEnabled","text":"<pre><code>withBpfPolicyDebugEnabled(bpfPolicyDebugEnabled)\n</code></pre> <p>\"BPFPolicyDebugEnabled when true, Felix records detailed information about the BPF policy programs, which can be examined with the calico-bpf command-line tool.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre> <p>\"DataplaneDriver filename of the external dataplane driver to use.  Only used if UseInternalDataplaneDriver is set to false.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdataplanewatchdogtimeout","title":"fn spec.withDataplaneWatchdogTimeout","text":"<pre><code>withDataplaneWatchdogTimeout(dataplaneWatchdogTimeout)\n</code></pre> <p>\"DataplaneWatchdogTimeout is the readiness/liveness timeout used for Felix's (internal) dataplane driver. Increase this value if you experience spurious non-ready or non-live events when Felix is under heavy load. Decrease the value to get felix to report non-live or non-ready more quickly. [Default: 90s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the IPv4 source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddressipv6","title":"fn spec.withDeviceRouteSourceAddressIPv6","text":"<pre><code>withDeviceRouteSourceAddressIPv6(deviceRouteSourceAddressIPv6)\n</code></pre> <p>\"This is the IPv6 source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override the feature detection. Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\". \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithfloatingips","title":"fn spec.withFloatingIPs","text":"<pre><code>withFloatingIPs(floatingIPs)\n</code></pre> <p>\"FloatingIPs configures whether or not Felix will program floating IP addresses.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre> <p>\"IPIPEnabled overrides whether Felix should configure an IPIP interface on the host. Optional as Felix determines this based on the existing IP pools. [Default: nil (unset)]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is legacy.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre> <p>\"IPv6Support controls whether Felix enables support for IPv6 (if supported by the in-use dataplane).\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithlogdebugfilenameregex","title":"fn spec.withLogDebugFilenameRegex","text":"<pre><code>withLogDebugFilenameRegex(logDebugFilenameRegex)\n</code></pre> <p>\"LogDebugFilenameRegex controls which source code files have their Debug log output included in the logs. Only logs from files with names that match the given regular expression are included.  The filter only applies to Debug level logs.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithprometheuswireguardmetricsenabled","title":"fn spec.withPrometheusWireGuardMetricsEnabled","text":"<pre><code>withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)\n</code></pre> <p>\"PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithroutesyncdisabled","title":"fn spec.withRouteSyncDisabled","text":"<pre><code>withRouteSyncDisabled(routeSyncDisabled)\n</code></pre> <p>\"RouteSyncDisabled will disable all operations performed on the route table. Set to true to run in network-policy mode only.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithroutetableranges","title":"fn spec.withRouteTableRanges","text":"<pre><code>withRouteTableRanges(routeTableRanges)\n</code></pre> <p>\"Calico programs additional Linux route tables for various purposes. RouteTableRanges specifies a set of table index ranges that Calico should use. Deprecates<code>RouteTableRange</code>, overrides <code>RouteTableRange</code>.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithroutetablerangesmixin","title":"fn spec.withRouteTableRangesMixin","text":"<pre><code>withRouteTableRangesMixin(routeTableRanges)\n</code></pre> <p>\"Calico programs additional Linux route tables for various purposes. RouteTableRanges specifies a set of table index ranges that Calico should use. Deprecates<code>RouteTableRange</code>, overrides <code>RouteTableRange</code>.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre> <p>\"UseInternalDataplaneDriver, if true, Felix will use its internal dataplane programming logic.  If false, it will launch an external dataplane driver and communicate with it over protobuf.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre> <p>\"VXLANEnabled overrides whether Felix should create the VXLAN tunnel device for VXLAN networking. Optional as Felix determines this based on the existing IP pools. [Default: nil (unset)]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the IPv4 VXLAN tunnel device. See Configuring MTU [Default: 1410]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithvxlanmtuv6","title":"fn spec.withVxlanMTUV6","text":"<pre><code>withVxlanMTUV6(vxlanMTUV6)\n</code></pre> <p>\"VXLANMTUV6 is the MTU to set on the IPv6 VXLAN tunnel device. See Configuring MTU [Default: 1390]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled for IPv4 (encapsulating IPv4 traffic over an IPv4 underlay network). [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardenabledv6","title":"fn spec.withWireguardEnabledV6","text":"<pre><code>withWireguardEnabledV6(wireguardEnabledV6)\n</code></pre> <p>\"WireguardEnabledV6 controls whether Wireguard is enabled for IPv6 (encapsulating IPv6 traffic over an IPv6 underlay network). [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardhostencryptionenabled","title":"fn spec.withWireguardHostEncryptionEnabled","text":"<pre><code>withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)\n</code></pre> <p>\"WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the IPv4 Wireguard interface. [Default: wireguard.cali]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacenamev6","title":"fn spec.withWireguardInterfaceNameV6","text":"<pre><code>withWireguardInterfaceNameV6(wireguardInterfaceNameV6)\n</code></pre> <p>\"WireguardInterfaceNameV6 specifies the name to use for the IPv6 Wireguard interface. [Default: wg-v6.cali]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardkeepalive","title":"fn spec.withWireguardKeepAlive","text":"<pre><code>withWireguardKeepAlive(wireguardKeepAlive)\n</code></pre> <p>\"WireguardKeepAlive controls Wireguard PersistentKeepalive option. Set 0 to disable. [Default: 0]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by IPv4 Wireguard. [Default: 51820]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningportv6","title":"fn spec.withWireguardListeningPortV6","text":"<pre><code>withWireguardListeningPortV6(wireguardListeningPortV6)\n</code></pre> <p>\"WireguardListeningPortV6 controls the listening port used by IPv6 Wireguard. [Default: 51821]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the IPv4 Wireguard interface. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardmtuv6","title":"fn spec.withWireguardMTUV6","text":"<pre><code>withWireguardMTUV6(wireguardMTUV6)\n</code></pre> <p>\"WireguardMTUV6 controls the MTU on the IPv6 Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithworkloadsourcespoofing","title":"fn spec.withWorkloadSourceSpoofing","text":"<pre><code>withWorkloadSourceSpoofing(workloadSourceSpoofing)\n</code></pre> <p>\"WorkloadSourceSpoofing controls whether pods can use the allowedSourcePrefixes annotation to send traffic with a source IP address that is not theirs. This is disabled by default. When set to \\\"Any\\\", pods can request any prefix.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithnet","title":"fn spec.failsafeInboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithnet","title":"fn spec.failsafeOutboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Deprecated in favor of RouteTableRanges. Calico programs additional Linux route tables for various purposes. RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#obj-specroutetableranges","title":"obj spec.routeTableRanges","text":"<p>\"Calico programs additional Linux route tables for various purposes. RouteTableRanges specifies a set of table index ranges that Calico should use. Deprecates<code>RouteTableRange</code>, overrides <code>RouteTableRange</code>.\"</p>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specroutetablerangeswithmax","title":"fn spec.routeTableRanges.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.24/crd/v1/felixConfiguration/#fn-specroutetablerangeswithmin","title":"fn spec.routeTableRanges.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.24/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.24/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.24/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.24/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.24/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.24/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.24/crd/v1/ipReservation/","title":"crd.v1.ipReservation","text":""},{"location":"3.24/crd/v1/ipReservation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withReservedCIDRs(reservedCIDRs)</code></li> <li><code>fn withReservedCIDRsMixin(reservedCIDRs)</code></li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/ipReservation/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/ipReservation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPReservation</p>"},{"location":"3.24/crd/v1/ipReservation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/ipReservation/#obj-spec","title":"obj spec","text":"<p>\"IPReservationSpec contains the specification for an IPReservation resource.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-specwithreservedcidrs","title":"fn spec.withReservedCIDRs","text":"<pre><code>withReservedCIDRs(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p>"},{"location":"3.24/crd/v1/ipReservation/#fn-specwithreservedcidrsmixin","title":"fn spec.withReservedCIDRsMixin","text":"<pre><code>withReservedCIDRsMixin(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.24/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withSequenceNumber(sequenceNumber)</code></li> <li><code>fn withSequenceNumberForAllocation(sequenceNumberForAllocation)</code></li> <li><code>fn withSequenceNumberForAllocationMixin(sequenceNumberForAllocation)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.24/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre> <p>\"Affinity of the block, if this block has one. If set, it will be of the form \\\"host:\\\". If not set, this block is not affine to a host.\""},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre> <p>\"Array of allocations in-use within this block. nil entries mean the allocation is free. For non-nil entries at index i, the index is the ordinal of the allocation within this block and the value is the index of the associated attributes in the Attributes array.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>\"Array of allocations in-use within this block. nil entries mean the allocation is free. For non-nil entries at index i, the index is the ordinal of the allocation within this block and the value is the index of the associated attributes in the Attributes array.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"The block's CIDR.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted is an internal boolean used to workaround a limitation in the Kubernetes API whereby deletion will not return a conflict error if the block has been updated. It should not be set manually.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithsequencenumber","title":"fn spec.withSequenceNumber","text":"<pre><code>withSequenceNumber(sequenceNumber)\n</code></pre> <p>\"We store a sequence number that is updated each time the block is written. Each allocation will also store the sequence number of the block at the time of its creation. When releasing an IP, passing the sequence number associated with the allocation allows us to protect against a race condition and ensure the IP hasn't been released and re-allocated since the release request.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithsequencenumberforallocation","title":"fn spec.withSequenceNumberForAllocation","text":"<pre><code>withSequenceNumberForAllocation(sequenceNumberForAllocation)\n</code></pre> <p>\"Map of allocated ordinal within the block to sequence number of the block at the time of allocation. Kubernetes does not allow numerical keys for maps, so the key is cast to a string.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithsequencenumberforallocationmixin","title":"fn spec.withSequenceNumberForAllocationMixin","text":"<pre><code>withSequenceNumberForAllocationMixin(sequenceNumberForAllocation)\n</code></pre> <p>\"Map of allocated ordinal within the block to sequence number of the block at the time of allocation. Kubernetes does not allow numerical keys for maps, so the key is cast to a string.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre> <p>\"StrictAffinity on the IPAMBlock is deprecated and no longer used by the code. Use IPAMConfig StrictAffinity instead.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre> <p>\"Unallocated is an ordered list of allocations which are free in the block.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>\"Unallocated is an ordered list of allocations which are free in the block.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":"<p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.24/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.24/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.24/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.24/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.24/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.24/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.24/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.24/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.24/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.24/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.24/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDebugProfilePort(debugProfilePort)</code></li> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withLeakGracePeriod(leakGracePeriod)</code></li> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-specwithdebugprofileport","title":"fn spec.withDebugProfilePort","text":"<pre><code>withDebugProfilePort(debugProfilePort)\n</code></pre> <p>\"DebugProfilePort configures the port to serve memory and cpu profiles on. If not specified, profiling is disabled.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithleakgraceperiod","title":"fn spec.controllers.node.withLeakGracePeriod","text":"<pre><code>withLeakGracePeriod(leakGracePeriod)\n</code></pre> <p>\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.24/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.24/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.24/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.24/crd/v1/networkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.24/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.24/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.24/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.24/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.24/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.24/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.24/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/","title":"calico","text":"<pre><code>local calico = import \"github.com/jsonnet-libs/calico-libsonnet/3.25/main.libsonnet\"\n</code></pre> <ul> <li>crd</li> </ul>"},{"location":"3.25/crd/","title":"crd","text":"<ul> <li>v1</li> </ul>"},{"location":"3.25/crd/v1/","title":"crd.v1","text":"<ul> <li>bgpConfiguration</li> <li>bgpPeer</li> <li>blockAffinity</li> <li>clusterInformation</li> <li>felixConfiguration</li> <li>globalNetworkPolicy</li> <li>globalNetworkSet</li> <li>hostEndpoint</li> <li>ipReservation</li> <li>ipamBlock</li> <li>ipamConfig</li> <li>ipamHandle</li> <li>kubeControllersConfiguration</li> <li>networkPolicy</li> <li>networkSet</li> </ul>"},{"location":"3.25/crd/v1/bgpConfiguration/","title":"crd.v1.bgpConfiguration","text":"<p>\"BGPConfiguration contains the configuration for any BGP routing.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withBindMode(bindMode)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> <li><code>fn withIgnoredInterfaces(ignoredInterfaces)</code></li> <li><code>fn withIgnoredInterfacesMixin(ignoredInterfaces)</code></li> <li><code>fn withListenPort(listenPort)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withNodeMeshMaxRestartTime(nodeMeshMaxRestartTime)</code></li> <li><code>fn withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)</code></li> <li><code>fn withPrefixAdvertisements(prefixAdvertisements)</code></li> <li><code>fn withPrefixAdvertisementsMixin(prefixAdvertisements)</code></li> <li><code>fn withServiceClusterIPs(serviceClusterIPs)</code></li> <li><code>fn withServiceClusterIPsMixin(serviceClusterIPs)</code></li> <li><code>fn withServiceExternalIPs(serviceExternalIPs)</code></li> <li><code>fn withServiceExternalIPsMixin(serviceExternalIPs)</code></li> <li><code>fn withServiceLoadBalancerIPs(serviceLoadBalancerIPs)</code></li> <li><code>fn withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)</code></li> <li><code>obj spec.communities</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withValue(value)</code></li> </ul> </li> <li><code>obj spec.nodeMeshPassword</code><ul> <li><code>obj spec.nodeMeshPassword.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.prefixAdvertisements</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withCommunities(communities)</code></li> <li><code>fn withCommunitiesMixin(communities)</code></li> </ul> </li> <li><code>obj spec.serviceClusterIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceExternalIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> <li><code>obj spec.serviceLoadBalancerIPs</code><ul> <li><code>fn withCidr(cidr)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/bgpConfiguration/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/bgpConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPConfiguration</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-spec","title":"obj spec","text":"<p>\"BGPConfigurationSpec contains the values of the BGP configuration.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"ASNumber is the default AS number used by a node. [Default: 64512]\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithbindmode","title":"fn spec.withBindMode","text":"<pre><code>withBindMode(bindMode)\n</code></pre> <p>\"BindMode indicates whether to listen for BGP connections on all addresses (None) or only on the node's canonical IP address Node.Spec.BGP.IPvXAddress (NodeIP). Default behaviour is to listen for BGP connections on all addresses.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithcommunities","title":"fn spec.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithcommunitiesmixin","title":"fn spec.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithignoredinterfaces","title":"fn spec.withIgnoredInterfaces","text":"<pre><code>withIgnoredInterfaces(ignoredInterfaces)\n</code></pre> <p>\"IgnoredInterfaces indicates the network interfaces that needs to be excluded when reading device routes.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithignoredinterfacesmixin","title":"fn spec.withIgnoredInterfacesMixin","text":"<pre><code>withIgnoredInterfacesMixin(ignoredInterfaces)\n</code></pre> <p>\"IgnoredInterfaces indicates the network interfaces that needs to be excluded when reading device routes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithlistenport","title":"fn spec.withListenPort","text":"<pre><code>withListenPort(listenPort)\n</code></pre> <p>\"ListenPort is the port where BGP protocol should listen. Defaults to 179\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: INFO]\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithnodemeshmaxrestarttime","title":"fn spec.withNodeMeshMaxRestartTime","text":"<pre><code>withNodeMeshMaxRestartTime(nodeMeshMaxRestartTime)\n</code></pre> <p>\"Time to allow for software restart for node-to-mesh peerings.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used. This field can only be set on the default BGPConfiguration instance and requires that NodeMesh is enabled\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithnodetonodemeshenabled","title":"fn spec.withNodeToNodeMeshEnabled","text":"<pre><code>withNodeToNodeMeshEnabled(nodeToNodeMeshEnabled)\n</code></pre> <p>\"NodeToNodeMeshEnabled sets whether full node to node BGP mesh is enabled. [Default: true]\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisements","title":"fn spec.withPrefixAdvertisements","text":"<pre><code>withPrefixAdvertisements(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithprefixadvertisementsmixin","title":"fn spec.withPrefixAdvertisementsMixin","text":"<pre><code>withPrefixAdvertisementsMixin(prefixAdvertisements)\n</code></pre> <p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithserviceclusterips","title":"fn spec.withServiceClusterIPs","text":"<pre><code>withServiceClusterIPs(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithserviceclusteripsmixin","title":"fn spec.withServiceClusterIPsMixin","text":"<pre><code>withServiceClusterIPsMixin(serviceClusterIPs)\n</code></pre> <p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithserviceexternalips","title":"fn spec.withServiceExternalIPs","text":"<pre><code>withServiceExternalIPs(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithserviceexternalipsmixin","title":"fn spec.withServiceExternalIPsMixin","text":"<pre><code>withServiceExternalIPsMixin(serviceExternalIPs)\n</code></pre> <p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalancerips","title":"fn spec.withServiceLoadBalancerIPs","text":"<pre><code>withServiceLoadBalancerIPs(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specwithserviceloadbalanceripsmixin","title":"fn spec.withServiceLoadBalancerIPsMixin","text":"<pre><code>withServiceLoadBalancerIPsMixin(serviceLoadBalancerIPs)\n</code></pre> <p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-speccommunities","title":"obj spec.communities","text":"<p>\"Communities is a list of BGP community values and their arbitrary names for tagging routes.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-speccommunitieswithname","title":"fn spec.communities.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name given to community value.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-speccommunitieswithvalue","title":"fn spec.communities.withValue","text":"<pre><code>withValue(value)\n</code></pre> <p>\"Value must be of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where, <code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-specnodemeshpassword","title":"obj spec.nodeMeshPassword","text":"<p>\"Optional BGP password for full node-to-mesh peerings. This field can only be set on the default BGPConfiguration instance and requires that NodeMesh is enabled\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-specnodemeshpasswordsecretkeyref","title":"obj spec.nodeMeshPassword.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specnodemeshpasswordsecretkeyrefwithkey","title":"fn spec.nodeMeshPassword.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specnodemeshpasswordsecretkeyrefwithname","title":"fn spec.nodeMeshPassword.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specnodemeshpasswordsecretkeyrefwithoptional","title":"fn spec.nodeMeshPassword.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-specprefixadvertisements","title":"obj spec.prefixAdvertisements","text":"<p>\"PrefixAdvertisements contains per-prefix advertisement configuration.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcidr","title":"fn spec.prefixAdvertisements.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"CIDR for which properties should be advertised.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunities","title":"fn spec.prefixAdvertisements.withCommunities","text":"<pre><code>withCommunities(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specprefixadvertisementswithcommunitiesmixin","title":"fn spec.prefixAdvertisements.withCommunitiesMixin","text":"<pre><code>withCommunitiesMixin(communities)\n</code></pre> <p>\"Communities can be list of either community names already defined in <code>Specs.Communities</code> or community value of format <code>aa:nn</code> or <code>aa:nn:mm</code>. For standard community use <code>aa:nn</code> format, where <code>aa</code> and <code>nn</code> are 16 bit number. For large community use <code>aa:nn:mm</code> format, where <code>aa</code>, <code>nn</code> and <code>mm</code> are 32 bit number. Where,<code>aa</code> is an AS Number, <code>nn</code> and <code>mm</code> are per-AS identifier.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-specserviceclusterips","title":"obj spec.serviceClusterIPs","text":"<p>\"ServiceClusterIPs are the CIDR blocks from which service cluster IPs are allocated. If specified, Calico will advertise these blocks, as well as any cluster IPs within them.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specserviceclusteripswithcidr","title":"fn spec.serviceClusterIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-specserviceexternalips","title":"obj spec.serviceExternalIPs","text":"<p>\"ServiceExternalIPs are the CIDR blocks for Kubernetes Service External IPs. Kubernetes Service ExternalIPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specserviceexternalipswithcidr","title":"fn spec.serviceExternalIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.25/crd/v1/bgpConfiguration/#obj-specserviceloadbalancerips","title":"obj spec.serviceLoadBalancerIPs","text":"<p>\"ServiceLoadBalancerIPs are the CIDR blocks for Kubernetes Service LoadBalancer IPs. Kubernetes Service status.LoadBalancer.Ingress IPs will only be advertised if they are within one of these blocks.\"</p>"},{"location":"3.25/crd/v1/bgpConfiguration/#fn-specserviceloadbalanceripswithcidr","title":"fn spec.serviceLoadBalancerIPs.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.25/crd/v1/bgpPeer/","title":"crd.v1.bgpPeer","text":""},{"location":"3.25/crd/v1/bgpPeer/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAsNumber(asNumber)</code></li> <li><code>fn withKeepOriginalNextHop(keepOriginalNextHop)</code></li> <li><code>fn withMaxRestartTime(maxRestartTime)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withNodeSelector(nodeSelector)</code></li> <li><code>fn withNumAllowedLocalASNumbers(numAllowedLocalASNumbers)</code></li> <li><code>fn withPeerIP(peerIP)</code></li> <li><code>fn withPeerSelector(peerSelector)</code></li> <li><code>fn withReachableBy(reachableBy)</code></li> <li><code>fn withSourceAddress(sourceAddress)</code></li> <li><code>fn withTtlSecurity(ttlSecurity)</code></li> <li><code>obj spec.password</code><ul> <li><code>obj spec.password.secretKeyRef</code><ul> <li><code>fn withKey(key)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withOptional(optional)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/bgpPeer/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/bgpPeer/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BGPPeer</p>"},{"location":"3.25/crd/v1/bgpPeer/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#obj-spec","title":"obj spec","text":"<p>\"BGPPeerSpec contains the specification for a BGPPeer resource.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithasnumber","title":"fn spec.withAsNumber","text":"<pre><code>withAsNumber(asNumber)\n</code></pre> <p>\"The AS Number of the peer.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithkeeporiginalnexthop","title":"fn spec.withKeepOriginalNextHop","text":"<pre><code>withKeepOriginalNextHop(keepOriginalNextHop)\n</code></pre> <p>\"Option to keep the original nexthop field when routes are sent to a BGP Peer. Setting \\\"true\\\" configures the selected BGP Peers node to use the \\\"next hop keep;\\\" instead of \\\"next hop self;\\\"(default) in the specific branch of the Node on \\\"bird.cfg\\\".\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithmaxrestarttime","title":"fn spec.withMaxRestartTime","text":"<pre><code>withMaxRestartTime(maxRestartTime)\n</code></pre> <p>\"Time to allow for software restart.  When specified, this is configured as the graceful restart timeout.  When not specified, the BIRD default of 120s is used.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance that is targeted by this peer. If this is not set, and no nodeSelector is specified, then this BGP peer selects all nodes in the cluster.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithnodeselector","title":"fn spec.withNodeSelector","text":"<pre><code>withNodeSelector(nodeSelector)\n</code></pre> <p>\"Selector for the nodes that should have this peering.  When this is set, the Node field must be empty.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithnumallowedlocalasnumbers","title":"fn spec.withNumAllowedLocalASNumbers","text":"<pre><code>withNumAllowedLocalASNumbers(numAllowedLocalASNumbers)\n</code></pre> <p>\"Maximum number of local AS numbers that are allowed in the AS path for received routes. This removes BGP loop prevention and should only be used if absolutely necesssary.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithpeerip","title":"fn spec.withPeerIP","text":"<pre><code>withPeerIP(peerIP)\n</code></pre> <p>\"The IP address of the peer followed by an optional port number to peer with. If port number is given, format should be <code>[&lt;IPv6&gt;]:port</code> or <code>&lt;IPv4&gt;:&lt;port&gt;</code> for IPv4. If optional port number is not set, and this peer IP and ASNumber belongs to a calico/node with ListenPort set in BGPConfiguration, then we use that port to peer.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithpeerselector","title":"fn spec.withPeerSelector","text":"<pre><code>withPeerSelector(peerSelector)\n</code></pre> <p>\"Selector for the remote nodes to peer with.  When this is set, the PeerIP and ASNumber fields must be empty.  For each peering between the local node and selected remote nodes, we configure an IPv4 peering if both ends have NodeBGPSpec.IPv4Address specified, and an IPv6 peering if both ends have NodeBGPSpec.IPv6Address specified.  The remote AS number comes from the remote node's NodeBGPSpec.ASNumber, or the global default if that is not set.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithreachableby","title":"fn spec.withReachableBy","text":"<pre><code>withReachableBy(reachableBy)\n</code></pre> <p>\"Add an exact, i.e. /32, static route toward peer IP in order to prevent route flapping. ReachableBy contains the address of the gateway which peer can be reached by.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithsourceaddress","title":"fn spec.withSourceAddress","text":"<pre><code>withSourceAddress(sourceAddress)\n</code></pre> <p>\"Specifies whether and how to configure a source address for the peerings generated by this BGPPeer resource.  Default value \\\"UseNodeIP\\\" means to configure the node IP as the source address.  \\\"None\\\" means not to configure a source address.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specwithttlsecurity","title":"fn spec.withTtlSecurity","text":"<pre><code>withTtlSecurity(ttlSecurity)\n</code></pre> <p>\"TTLSecurity enables the generalized TTL security mechanism (GTSM) which protects against spoofed packets by ignoring received packets with a smaller than expected TTL value. The provided value is the number of hops (edges) between the peers.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#obj-specpassword","title":"obj spec.password","text":"<p>\"Optional BGP password for the peerings generated by this BGPPeer resource.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#obj-specpasswordsecretkeyref","title":"obj spec.password.secretKeyRef","text":"<p>\"Selects a key of a secret in the node pod's namespace.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithkey","title":"fn spec.password.secretKeyRef.withKey","text":"<pre><code>withKey(key)\n</code></pre> <p>\"The key of the secret to select from.  Must be a valid secret key.\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithname","title":"fn spec.password.secretKeyRef.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\"</p>"},{"location":"3.25/crd/v1/bgpPeer/#fn-specpasswordsecretkeyrefwithoptional","title":"fn spec.password.secretKeyRef.withOptional","text":"<pre><code>withOptional(optional)\n</code></pre> <p>\"Specify whether the Secret or its key must be defined\"</p>"},{"location":"3.25/crd/v1/blockAffinity/","title":"crd.v1.blockAffinity","text":""},{"location":"3.25/crd/v1/blockAffinity/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withState(state)</code></li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/blockAffinity/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/blockAffinity/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of BlockAffinity</p>"},{"location":"3.25/crd/v1/blockAffinity/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#obj-spec","title":"obj spec","text":"<p>\"BlockAffinitySpec contains the specification for a BlockAffinity resource.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre>"},{"location":"3.25/crd/v1/blockAffinity/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted indicates that this block affinity is being deleted. This field is a string for compatibility with older releases that mistakenly treat this field as a string.\"</p>"},{"location":"3.25/crd/v1/blockAffinity/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre>"},{"location":"3.25/crd/v1/blockAffinity/#fn-specwithstate","title":"fn spec.withState","text":"<pre><code>withState(state)\n</code></pre>"},{"location":"3.25/crd/v1/clusterInformation/","title":"crd.v1.clusterInformation","text":"<p>\"ClusterInformation contains the cluster specific information.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withCalicoVersion(calicoVersion)</code></li> <li><code>fn withClusterGUID(clusterGUID)</code></li> <li><code>fn withClusterType(clusterType)</code></li> <li><code>fn withDatastoreReady(datastoreReady)</code></li> <li><code>fn withVariant(variant)</code></li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/clusterInformation/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/clusterInformation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of ClusterInformation</p>"},{"location":"3.25/crd/v1/clusterInformation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#obj-spec","title":"obj spec","text":"<p>\"ClusterInformationSpec contains the values of describing the cluster.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-specwithcalicoversion","title":"fn spec.withCalicoVersion","text":"<pre><code>withCalicoVersion(calicoVersion)\n</code></pre> <p>\"CalicoVersion is the version of Calico that the cluster is running\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-specwithclusterguid","title":"fn spec.withClusterGUID","text":"<pre><code>withClusterGUID(clusterGUID)\n</code></pre> <p>\"ClusterGUID is the GUID of the cluster\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-specwithclustertype","title":"fn spec.withClusterType","text":"<pre><code>withClusterType(clusterType)\n</code></pre> <p>\"ClusterType describes the type of the cluster\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-specwithdatastoreready","title":"fn spec.withDatastoreReady","text":"<pre><code>withDatastoreReady(datastoreReady)\n</code></pre> <p>\"DatastoreReady is used during significant datastore migrations to signal to components such as Felix that it should wait before accessing the datastore.\"</p>"},{"location":"3.25/crd/v1/clusterInformation/#fn-specwithvariant","title":"fn spec.withVariant","text":"<pre><code>withVariant(variant)\n</code></pre> <p>\"Variant declares which variant of Calico should be active.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/","title":"crd.v1.felixConfiguration","text":"<p>\"Felix Configuration contains the configuration for Felix.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)</code></li> <li><code>fn withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)</code></li> <li><code>fn withAwsSrcDstCheck(awsSrcDstCheck)</code></li> <li><code>fn withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)</code></li> <li><code>fn withBpfDataIfacePattern(bpfDataIfacePattern)</code></li> <li><code>fn withBpfDisableUnprivileged(bpfDisableUnprivileged)</code></li> <li><code>fn withBpfEnabled(bpfEnabled)</code></li> <li><code>fn withBpfEnforceRPF(bpfEnforceRPF)</code></li> <li><code>fn withBpfExtToServiceConnmark(bpfExtToServiceConnmark)</code></li> <li><code>fn withBpfExternalServiceMode(bpfExternalServiceMode)</code></li> <li><code>fn withBpfHostConntrackBypass(bpfHostConntrackBypass)</code></li> <li><code>fn withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)</code></li> <li><code>fn withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)</code></li> <li><code>fn withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)</code></li> <li><code>fn withBpfL3IfacePattern(bpfL3IfacePattern)</code></li> <li><code>fn withBpfLogLevel(bpfLogLevel)</code></li> <li><code>fn withBpfMapSizeConntrack(bpfMapSizeConntrack)</code></li> <li><code>fn withBpfMapSizeIPSets(bpfMapSizeIPSets)</code></li> <li><code>fn withBpfMapSizeIfState(bpfMapSizeIfState)</code></li> <li><code>fn withBpfMapSizeNATAffinity(bpfMapSizeNATAffinity)</code></li> <li><code>fn withBpfMapSizeNATBackend(bpfMapSizeNATBackend)</code></li> <li><code>fn withBpfMapSizeNATFrontend(bpfMapSizeNATFrontend)</code></li> <li><code>fn withBpfMapSizeRoute(bpfMapSizeRoute)</code></li> <li><code>fn withBpfPSNATPorts(bpfPSNATPorts)</code></li> <li><code>fn withBpfPolicyDebugEnabled(bpfPolicyDebugEnabled)</code></li> <li><code>fn withChainInsertMode(chainInsertMode)</code></li> <li><code>fn withDataplaneDriver(dataplaneDriver)</code></li> <li><code>fn withDataplaneWatchdogTimeout(dataplaneWatchdogTimeout)</code></li> <li><code>fn withDebugDisableLogDropping(debugDisableLogDropping)</code></li> <li><code>fn withDebugMemoryProfilePath(debugMemoryProfilePath)</code></li> <li><code>fn withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)</code></li> <li><code>fn withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)</code></li> <li><code>fn withDefaultEndpointToHostAction(defaultEndpointToHostAction)</code></li> <li><code>fn withDeviceRouteProtocol(deviceRouteProtocol)</code></li> <li><code>fn withDeviceRouteSourceAddress(deviceRouteSourceAddress)</code></li> <li><code>fn withDeviceRouteSourceAddressIPv6(deviceRouteSourceAddressIPv6)</code></li> <li><code>fn withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)</code></li> <li><code>fn withEndpointReportingDelay(endpointReportingDelay)</code></li> <li><code>fn withEndpointReportingEnabled(endpointReportingEnabled)</code></li> <li><code>fn withExternalNodesList(externalNodesList)</code></li> <li><code>fn withExternalNodesListMixin(externalNodesList)</code></li> <li><code>fn withFailsafeInboundHostPorts(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)</code></li> <li><code>fn withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)</code></li> <li><code>fn withFeatureDetectOverride(featureDetectOverride)</code></li> <li><code>fn withFeatureGates(featureGates)</code></li> <li><code>fn withFloatingIPs(floatingIPs)</code></li> <li><code>fn withGenericXDPEnabled(genericXDPEnabled)</code></li> <li><code>fn withHealthEnabled(healthEnabled)</code></li> <li><code>fn withHealthHost(healthHost)</code></li> <li><code>fn withHealthPort(healthPort)</code></li> <li><code>fn withHealthTimeoutOverrides(healthTimeoutOverrides)</code></li> <li><code>fn withHealthTimeoutOverridesMixin(healthTimeoutOverrides)</code></li> <li><code>fn withInterfaceExclude(interfaceExclude)</code></li> <li><code>fn withInterfacePrefix(interfacePrefix)</code></li> <li><code>fn withInterfaceRefreshInterval(interfaceRefreshInterval)</code></li> <li><code>fn withIpipEnabled(ipipEnabled)</code></li> <li><code>fn withIpipMTU(ipipMTU)</code></li> <li><code>fn withIpsetsRefreshInterval(ipsetsRefreshInterval)</code></li> <li><code>fn withIptablesBackend(iptablesBackend)</code></li> <li><code>fn withIptablesFilterAllowAction(iptablesFilterAllowAction)</code></li> <li><code>fn withIptablesLockFilePath(iptablesLockFilePath)</code></li> <li><code>fn withIptablesLockProbeInterval(iptablesLockProbeInterval)</code></li> <li><code>fn withIptablesLockTimeout(iptablesLockTimeout)</code></li> <li><code>fn withIptablesMangleAllowAction(iptablesMangleAllowAction)</code></li> <li><code>fn withIptablesMarkMask(iptablesMarkMask)</code></li> <li><code>fn withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)</code></li> <li><code>fn withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)</code></li> <li><code>fn withIptablesRefreshInterval(iptablesRefreshInterval)</code></li> <li><code>fn withIpv6Support(ipv6Support)</code></li> <li><code>fn withKubeNodePortRanges(kubeNodePortRanges)</code></li> <li><code>fn withKubeNodePortRangesMixin(kubeNodePortRanges)</code></li> <li><code>fn withLogDebugFilenameRegex(logDebugFilenameRegex)</code></li> <li><code>fn withLogFilePath(logFilePath)</code></li> <li><code>fn withLogPrefix(logPrefix)</code></li> <li><code>fn withLogSeverityFile(logSeverityFile)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withLogSeveritySys(logSeveritySys)</code></li> <li><code>fn withMaxIpsetSize(maxIpsetSize)</code></li> <li><code>fn withMetadataAddr(metadataAddr)</code></li> <li><code>fn withMetadataPort(metadataPort)</code></li> <li><code>fn withMtuIfacePattern(mtuIfacePattern)</code></li> <li><code>fn withNatOutgoingAddress(natOutgoingAddress)</code></li> <li><code>fn withNatPortRange(natPortRange)</code></li> <li><code>fn withNetlinkTimeout(netlinkTimeout)</code></li> <li><code>fn withOpenstackRegion(openstackRegion)</code></li> <li><code>fn withPolicySyncPathPrefix(policySyncPathPrefix)</code></li> <li><code>fn withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsEnabled(prometheusMetricsEnabled)</code></li> <li><code>fn withPrometheusMetricsHost(prometheusMetricsHost)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>fn withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)</code></li> <li><code>fn withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)</code></li> <li><code>fn withRemoveExternalRoutes(removeExternalRoutes)</code></li> <li><code>fn withReportingInterval(reportingInterval)</code></li> <li><code>fn withReportingTTL(reportingTTL)</code></li> <li><code>fn withRouteRefreshInterval(routeRefreshInterval)</code></li> <li><code>fn withRouteSource(routeSource)</code></li> <li><code>fn withRouteSyncDisabled(routeSyncDisabled)</code></li> <li><code>fn withRouteTableRanges(routeTableRanges)</code></li> <li><code>fn withRouteTableRangesMixin(routeTableRanges)</code></li> <li><code>fn withServiceLoopPrevention(serviceLoopPrevention)</code></li> <li><code>fn withSidecarAccelerationEnabled(sidecarAccelerationEnabled)</code></li> <li><code>fn withUsageReportingEnabled(usageReportingEnabled)</code></li> <li><code>fn withUsageReportingInitialDelay(usageReportingInitialDelay)</code></li> <li><code>fn withUsageReportingInterval(usageReportingInterval)</code></li> <li><code>fn withUseInternalDataplaneDriver(useInternalDataplaneDriver)</code></li> <li><code>fn withVxlanEnabled(vxlanEnabled)</code></li> <li><code>fn withVxlanMTU(vxlanMTU)</code></li> <li><code>fn withVxlanMTUV6(vxlanMTUV6)</code></li> <li><code>fn withVxlanPort(vxlanPort)</code></li> <li><code>fn withVxlanVNI(vxlanVNI)</code></li> <li><code>fn withWireguardEnabled(wireguardEnabled)</code></li> <li><code>fn withWireguardEnabledV6(wireguardEnabledV6)</code></li> <li><code>fn withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)</code></li> <li><code>fn withWireguardInterfaceName(wireguardInterfaceName)</code></li> <li><code>fn withWireguardInterfaceNameV6(wireguardInterfaceNameV6)</code></li> <li><code>fn withWireguardKeepAlive(wireguardKeepAlive)</code></li> <li><code>fn withWireguardListeningPort(wireguardListeningPort)</code></li> <li><code>fn withWireguardListeningPortV6(wireguardListeningPortV6)</code></li> <li><code>fn withWireguardMTU(wireguardMTU)</code></li> <li><code>fn withWireguardMTUV6(wireguardMTUV6)</code></li> <li><code>fn withWireguardRoutingRulePriority(wireguardRoutingRulePriority)</code></li> <li><code>fn withWorkloadSourceSpoofing(workloadSourceSpoofing)</code></li> <li><code>fn withXdpEnabled(xdpEnabled)</code></li> <li><code>fn withXdpRefreshInterval(xdpRefreshInterval)</code></li> <li><code>obj spec.failsafeInboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.failsafeOutboundHostPorts</code><ul> <li><code>fn withNet(net)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> <li><code>obj spec.healthTimeoutOverrides</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withTimeout(timeout)</code></li> </ul> </li> <li><code>obj spec.routeTableRange</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> <li><code>obj spec.routeTableRanges</code><ul> <li><code>fn withMax(max)</code></li> <li><code>fn withMin(min)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/felixConfiguration/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/felixConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of FelixConfiguration</p>"},{"location":"3.25/crd/v1/felixConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#obj-spec","title":"obj spec","text":"<p>\"FelixConfigurationSpec contains the values of the Felix configuration.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithallowipippacketsfromworkloads","title":"fn spec.withAllowIPIPPacketsFromWorkloads","text":"<pre><code>withAllowIPIPPacketsFromWorkloads(allowIPIPPacketsFromWorkloads)\n</code></pre> <p>\"AllowIPIPPacketsFromWorkloads controls whether Felix will add a rule to drop IPIP encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithallowvxlanpacketsfromworkloads","title":"fn spec.withAllowVXLANPacketsFromWorkloads","text":"<pre><code>withAllowVXLANPacketsFromWorkloads(allowVXLANPacketsFromWorkloads)\n</code></pre> <p>\"AllowVXLANPacketsFromWorkloads controls whether Felix will add a rule to drop VXLAN encapsulated traffic from workloads [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithawssrcdstcheck","title":"fn spec.withAwsSrcDstCheck","text":"<pre><code>withAwsSrcDstCheck(awsSrcDstCheck)\n</code></pre> <p>\"Set source-destination-check on AWS EC2 instances. Accepted value must be one of \\\"DoNothing\\\", \\\"Enable\\\" or \\\"Disable\\\". [Default: DoNothing]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfconnecttimeloadbalancingenabled","title":"fn spec.withBpfConnectTimeLoadBalancingEnabled","text":"<pre><code>withBpfConnectTimeLoadBalancingEnabled(bpfConnectTimeLoadBalancingEnabled)\n</code></pre> <p>\"BPFConnectTimeLoadBalancingEnabled when in BPF mode, controls whether Felix installs the connection-time load balancer.  The connect-time load balancer is required for the host to be able to reach Kubernetes services and it improves the performance of pod-to-service connections.  The only reason to disable it is for debugging purposes.  [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfdataifacepattern","title":"fn spec.withBpfDataIfacePattern","text":"<pre><code>withBpfDataIfacePattern(bpfDataIfacePattern)\n</code></pre> <p>\"BPFDataIfacePattern is a regular expression that controls which interfaces Felix should attach BPF programs to in order to catch traffic to/from the network.  This needs to match the interfaces that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.  It should not match the workload interfaces (usually named cali...).\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfdisableunprivileged","title":"fn spec.withBpfDisableUnprivileged","text":"<pre><code>withBpfDisableUnprivileged(bpfDisableUnprivileged)\n</code></pre> <p>\"BPFDisableUnprivileged, if enabled, Felix sets the kernel.unprivileged_bpf_disabled sysctl to disable unprivileged use of BPF.  This ensures that unprivileged users cannot access Calico's BPF maps and cannot insert their own BPF programs to interfere with Calico's. [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfenabled","title":"fn spec.withBpfEnabled","text":"<pre><code>withBpfEnabled(bpfEnabled)\n</code></pre> <p>\"BPFEnabled, if enabled Felix will use the BPF dataplane. [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfenforcerpf","title":"fn spec.withBpfEnforceRPF","text":"<pre><code>withBpfEnforceRPF(bpfEnforceRPF)\n</code></pre> <p>\"BPFEnforceRPF enforce strict RPF on all host interfaces with BPF programs regardless of what is the per-interfaces or global setting. Possible values are Disabled, Strict or Loose. [Default: Strict]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfexttoserviceconnmark","title":"fn spec.withBpfExtToServiceConnmark","text":"<pre><code>withBpfExtToServiceConnmark(bpfExtToServiceConnmark)\n</code></pre> <p>\"BPFExtToServiceConnmark in BPF mode, control a 32bit mark that is set on connections from an external client to a local service. This mark allows us to control how packets of that connection are routed within the host and how is routing interpreted by RPF check. [Default: 0]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfexternalservicemode","title":"fn spec.withBpfExternalServiceMode","text":"<pre><code>withBpfExternalServiceMode(bpfExternalServiceMode)\n</code></pre> <p>\"BPFExternalServiceMode in BPF mode, controls how connections from outside the cluster to services (node ports and cluster IPs) are forwarded to remote workloads.  If set to \\\"Tunnel\\\" then both request and response traffic is tunneled to the remote node.  If set to \\\"DSR\\\", the request traffic is tunneled but the response traffic is sent directly from the remote node.  In \\\"DSR\\\" mode, the remote node appears to use the IP of the ingress node; this requires a permissive L2 network.  [Default: Tunnel]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfhostconntrackbypass","title":"fn spec.withBpfHostConntrackBypass","text":"<pre><code>withBpfHostConntrackBypass(bpfHostConntrackBypass)\n</code></pre> <p>\"BPFHostConntrackBypass Controls whether to bypass Linux conntrack in BPF mode for workloads and services. [Default: true - bypass Linux conntrack]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyendpointslicesenabled","title":"fn spec.withBpfKubeProxyEndpointSlicesEnabled","text":"<pre><code>withBpfKubeProxyEndpointSlicesEnabled(bpfKubeProxyEndpointSlicesEnabled)\n</code></pre> <p>\"BPFKubeProxyEndpointSlicesEnabled in BPF mode, controls whether Felix's embedded kube-proxy accepts EndpointSlices or not.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyiptablescleanupenabled","title":"fn spec.withBpfKubeProxyIptablesCleanupEnabled","text":"<pre><code>withBpfKubeProxyIptablesCleanupEnabled(bpfKubeProxyIptablesCleanupEnabled)\n</code></pre> <p>\"BPFKubeProxyIptablesCleanupEnabled, if enabled in BPF mode, Felix will proactively clean up the upstream Kubernetes kube-proxy's iptables chains.  Should only be enabled if kube-proxy is not running.  [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfkubeproxyminsyncperiod","title":"fn spec.withBpfKubeProxyMinSyncPeriod","text":"<pre><code>withBpfKubeProxyMinSyncPeriod(bpfKubeProxyMinSyncPeriod)\n</code></pre> <p>\"BPFKubeProxyMinSyncPeriod, in BPF mode, controls the minimum time between updates to the dataplane for Felix's embedded kube-proxy.  Lower values give reduced set-up latency.  Higher values reduce Felix CPU usage by batching up more work.  [Default: 1s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfl3ifacepattern","title":"fn spec.withBpfL3IfacePattern","text":"<pre><code>withBpfL3IfacePattern(bpfL3IfacePattern)\n</code></pre> <p>\"BPFL3IfacePattern is a regular expression that allows to list tunnel devices like wireguard or vxlan (i.e., L3 devices) in addition to BPFDataIfacePattern. That is, tunnel interfaces not created by Calico, that Calico workload traffic flows over as well as any interfaces that handle incoming traffic to nodeports and services from outside the cluster.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfloglevel","title":"fn spec.withBpfLogLevel","text":"<pre><code>withBpfLogLevel(bpfLogLevel)\n</code></pre> <p>\"BPFLogLevel controls the log level of the BPF programs when in BPF dataplane mode.  One of \\\"Off\\\", \\\"Info\\\", or \\\"Debug\\\".  The logs are emitted to the BPF trace pipe, accessible with the command <code>tc exec bpf debug</code>. [Default: Off].\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeconntrack","title":"fn spec.withBpfMapSizeConntrack","text":"<pre><code>withBpfMapSizeConntrack(bpfMapSizeConntrack)\n</code></pre> <p>\"BPFMapSizeConntrack sets the size for the conntrack map.  This map must be large enough to hold an entry for each active connection.  Warning: changing the size of the conntrack map can cause disruption.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeipsets","title":"fn spec.withBpfMapSizeIPSets","text":"<pre><code>withBpfMapSizeIPSets(bpfMapSizeIPSets)\n</code></pre> <p>\"BPFMapSizeIPSets sets the size for ipsets map.  The IP sets map must be large enough to hold an entry for each endpoint matched by every selector in the source/destination matches in network policy.  Selectors such as \\\"all()\\\" can result in large numbers of entries (one entry per endpoint in that case).\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeifstate","title":"fn spec.withBpfMapSizeIfState","text":"<pre><code>withBpfMapSizeIfState(bpfMapSizeIfState)\n</code></pre> <p>\"BPFMapSizeIfState sets the size for ifstate map.  The ifstate map must be large enough to hold an entry for each device (host + workloads) on a host.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfmapsizenataffinity","title":"fn spec.withBpfMapSizeNATAffinity","text":"<pre><code>withBpfMapSizeNATAffinity(bpfMapSizeNATAffinity)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfmapsizenatbackend","title":"fn spec.withBpfMapSizeNATBackend","text":"<pre><code>withBpfMapSizeNATBackend(bpfMapSizeNATBackend)\n</code></pre> <p>\"BPFMapSizeNATBackend sets the size for nat back end map. This is the total number of endpoints. This is mostly more than the size of the number of services.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfmapsizenatfrontend","title":"fn spec.withBpfMapSizeNATFrontend","text":"<pre><code>withBpfMapSizeNATFrontend(bpfMapSizeNATFrontend)\n</code></pre> <p>\"BPFMapSizeNATFrontend sets the size for nat front end map. FrontendMap should be large enough to hold an entry for each nodeport, external IP and each port in each service.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfmapsizeroute","title":"fn spec.withBpfMapSizeRoute","text":"<pre><code>withBpfMapSizeRoute(bpfMapSizeRoute)\n</code></pre> <p>\"BPFMapSizeRoute sets the size for the routes map.  The routes map should be large enough to hold one entry per workload and a handful of entries per host (enough to cover its own IPs and tunnel IPs).\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfpsnatports","title":"fn spec.withBpfPSNATPorts","text":"<pre><code>withBpfPSNATPorts(bpfPSNATPorts)\n</code></pre> <p>\"BPFPSNATPorts sets the range from which we randomly pick a port if there is a source port collision. This should be within the ephemeral range as defined by RFC 6056 (1024\u201365535) and preferably outside the  ephemeral ranges used by common operating systems. Linux uses 32768\u201360999, while others mostly use the IANA defined range 49152\u201365535. It is not necessarily a problem if this range overlaps with the operating systems. Both ends of the range are inclusive. [Default: 20000:29999]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithbpfpolicydebugenabled","title":"fn spec.withBpfPolicyDebugEnabled","text":"<pre><code>withBpfPolicyDebugEnabled(bpfPolicyDebugEnabled)\n</code></pre> <p>\"BPFPolicyDebugEnabled when true, Felix records detailed information about the BPF policy programs, which can be examined with the calico-bpf command-line tool.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithchaininsertmode","title":"fn spec.withChainInsertMode","text":"<pre><code>withChainInsertMode(chainInsertMode)\n</code></pre> <p>\"ChainInsertMode controls whether Felix hooks the kernel's top-level iptables chains by inserting a rule at the top of the chain or by appending a rule at the bottom. insert is the safe default since it prevents Calico's rules from being bypassed. If you switch to append mode, be sure that the other rules in the chains signal acceptance by falling through to the Calico rules, otherwise the Calico policy will be bypassed. [Default: insert]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdataplanedriver","title":"fn spec.withDataplaneDriver","text":"<pre><code>withDataplaneDriver(dataplaneDriver)\n</code></pre> <p>\"DataplaneDriver filename of the external dataplane driver to use.  Only used if UseInternalDataplaneDriver is set to false.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdataplanewatchdogtimeout","title":"fn spec.withDataplaneWatchdogTimeout","text":"<pre><code>withDataplaneWatchdogTimeout(dataplaneWatchdogTimeout)\n</code></pre> <p>\"DataplaneWatchdogTimeout is the readiness/liveness timeout used for Felix's (internal) dataplane driver. Increase this value if you experience spurious non-ready or non-live events when Felix is under heavy load. Decrease the value to get felix to report non-live or non-ready more quickly. [Default: 90s] \\n Deprecated: replaced by the generic HealthTimeoutOverrides.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdebugdisablelogdropping","title":"fn spec.withDebugDisableLogDropping","text":"<pre><code>withDebugDisableLogDropping(debugDisableLogDropping)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdebugmemoryprofilepath","title":"fn spec.withDebugMemoryProfilePath","text":"<pre><code>withDebugMemoryProfilePath(debugMemoryProfilePath)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdebugsimulatecalcgraphhangafter","title":"fn spec.withDebugSimulateCalcGraphHangAfter","text":"<pre><code>withDebugSimulateCalcGraphHangAfter(debugSimulateCalcGraphHangAfter)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdebugsimulatedataplanehangafter","title":"fn spec.withDebugSimulateDataplaneHangAfter","text":"<pre><code>withDebugSimulateDataplaneHangAfter(debugSimulateDataplaneHangAfter)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdefaultendpointtohostaction","title":"fn spec.withDefaultEndpointToHostAction","text":"<pre><code>withDefaultEndpointToHostAction(defaultEndpointToHostAction)\n</code></pre> <p>\"DefaultEndpointToHostAction controls what happens to traffic that goes from a workload endpoint to the host itself (after the traffic hits the endpoint egress policy). By default Calico blocks traffic from workload endpoints to the host itself with an iptables \\\"DROP\\\" action. If you want to allow some or all traffic from endpoint to host, set this parameter to RETURN or ACCEPT. Use RETURN if you have your own rules in the iptables \\\"INPUT\\\" chain; Calico will insert its rules at the top of that chain, then \\\"RETURN\\\" packets to the \\\"INPUT\\\" chain once it has completed processing workload endpoint egress policy. Use ACCEPT to unconditionally accept packets from workloads after processing workload endpoint egress policy. [Default: Drop]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdevicerouteprotocol","title":"fn spec.withDeviceRouteProtocol","text":"<pre><code>withDeviceRouteProtocol(deviceRouteProtocol)\n</code></pre> <p>\"This defines the route protocol added to programmed device routes, by default this will be RTPROT_BOOT when left blank.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddress","title":"fn spec.withDeviceRouteSourceAddress","text":"<pre><code>withDeviceRouteSourceAddress(deviceRouteSourceAddress)\n</code></pre> <p>\"This is the IPv4 source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdeviceroutesourceaddressipv6","title":"fn spec.withDeviceRouteSourceAddressIPv6","text":"<pre><code>withDeviceRouteSourceAddressIPv6(deviceRouteSourceAddressIPv6)\n</code></pre> <p>\"This is the IPv6 source address to use on programmed device routes. By default the source address is left blank, leaving the kernel to choose the source address used.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithdisableconntrackinvalidcheck","title":"fn spec.withDisableConntrackInvalidCheck","text":"<pre><code>withDisableConntrackInvalidCheck(disableConntrackInvalidCheck)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithendpointreportingdelay","title":"fn spec.withEndpointReportingDelay","text":"<pre><code>withEndpointReportingDelay(endpointReportingDelay)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithendpointreportingenabled","title":"fn spec.withEndpointReportingEnabled","text":"<pre><code>withEndpointReportingEnabled(endpointReportingEnabled)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithexternalnodeslist","title":"fn spec.withExternalNodesList","text":"<pre><code>withExternalNodesList(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithexternalnodeslistmixin","title":"fn spec.withExternalNodesListMixin","text":"<pre><code>withExternalNodesListMixin(externalNodesList)\n</code></pre> <p>\"ExternalNodesCIDRList is a list of CIDR's of external-non-calico-nodes which may source tunnel traffic and have the tunneled traffic be accepted at calico nodes.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostports","title":"fn spec.withFailsafeInboundHostPorts","text":"<pre><code>withFailsafeInboundHostPorts(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithfailsafeinboundhostportsmixin","title":"fn spec.withFailsafeInboundHostPortsMixin","text":"<pre><code>withFailsafeInboundHostPortsMixin(failsafeInboundHostPorts)\n</code></pre> <p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostports","title":"fn spec.withFailsafeOutboundHostPorts","text":"<pre><code>withFailsafeOutboundHostPorts(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithfailsafeoutboundhostportsmixin","title":"fn spec.withFailsafeOutboundHostPortsMixin","text":"<pre><code>withFailsafeOutboundHostPortsMixin(failsafeOutboundHostPorts)\n</code></pre> <p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithfeaturedetectoverride","title":"fn spec.withFeatureDetectOverride","text":"<pre><code>withFeatureDetectOverride(featureDetectOverride)\n</code></pre> <p>\"FeatureDetectOverride is used to override feature detection based on auto-detected platform capabilities.  Values are specified in a comma separated list with no spaces, example; \\\"SNATFullyRandom=true,MASQFullyRandom=false,RestoreSupportsLock=\\\".  \\\"true\\\" or \\\"false\\\" will force the feature, empty or omitted values are auto-detected.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithfeaturegates","title":"fn spec.withFeatureGates","text":"<pre><code>withFeatureGates(featureGates)\n</code></pre> <p>\"FeatureGates is used to enable or disable tech-preview Calico features. Values are specified in a comma separated list with no spaces, example; \\\"BPFConnectTimeLoadBalancingWorkaround=enabled,XyZ=false\\\". This is used to enable features that are not fully production ready.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithfloatingips","title":"fn spec.withFloatingIPs","text":"<pre><code>withFloatingIPs(floatingIPs)\n</code></pre> <p>\"FloatingIPs configures whether or not Felix will program non-OpenStack floating IP addresses.  (OpenStack-derived floating IPs are always programmed, regardless of this setting.)\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithgenericxdpenabled","title":"fn spec.withGenericXDPEnabled","text":"<pre><code>withGenericXDPEnabled(genericXDPEnabled)\n</code></pre> <p>\"GenericXDPEnabled enables Generic XDP so network cards that don't support XDP offload or driver modes can use XDP. This is not recommended since it doesn't provide better performance than iptables. [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithhealthenabled","title":"fn spec.withHealthEnabled","text":"<pre><code>withHealthEnabled(healthEnabled)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithhealthhost","title":"fn spec.withHealthHost","text":"<pre><code>withHealthHost(healthHost)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithhealthport","title":"fn spec.withHealthPort","text":"<pre><code>withHealthPort(healthPort)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithhealthtimeoutoverrides","title":"fn spec.withHealthTimeoutOverrides","text":"<pre><code>withHealthTimeoutOverrides(healthTimeoutOverrides)\n</code></pre> <p>\"HealthTimeoutOverrides allows the internal watchdog timeouts of individual subcomponents to be overriden.  This is useful for working around \\\"false positive\\\" liveness timeouts that can occur in particularly stressful workloads or if CPU is constrained.  For a list of active subcomponents, see Felix's logs.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithhealthtimeoutoverridesmixin","title":"fn spec.withHealthTimeoutOverridesMixin","text":"<pre><code>withHealthTimeoutOverridesMixin(healthTimeoutOverrides)\n</code></pre> <p>\"HealthTimeoutOverrides allows the internal watchdog timeouts of individual subcomponents to be overriden.  This is useful for working around \\\"false positive\\\" liveness timeouts that can occur in particularly stressful workloads or if CPU is constrained.  For a list of active subcomponents, see Felix's logs.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithinterfaceexclude","title":"fn spec.withInterfaceExclude","text":"<pre><code>withInterfaceExclude(interfaceExclude)\n</code></pre> <p>\"InterfaceExclude is a comma-separated list of interfaces that Felix should exclude when monitoring for host endpoints. The default value ensures that Felix ignores Kubernetes' IPVS dummy interface, which is used internally by kube-proxy. If you want to exclude multiple interface names using a single value, the list supports regular expressions. For regular expressions you must wrap the value with '/'. For example having values '/^kube/,veth1' will exclude all interfaces that begin with 'kube' and also the interface 'veth1'. [Default: kube-ipvs0]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithinterfaceprefix","title":"fn spec.withInterfacePrefix","text":"<pre><code>withInterfacePrefix(interfacePrefix)\n</code></pre> <p>\"InterfacePrefix is the interface name prefix that identifies workload endpoints and so distinguishes them from host endpoint interfaces. Note: in environments other than bare metal, the orchestrators configure this appropriately. For example our Kubernetes and Docker integrations set the 'cali' value, and our OpenStack integration sets the 'tap' value. [Default: cali]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithinterfacerefreshinterval","title":"fn spec.withInterfaceRefreshInterval","text":"<pre><code>withInterfaceRefreshInterval(interfaceRefreshInterval)\n</code></pre> <p>\"InterfaceRefreshInterval is the period at which Felix rescans local interfaces to verify their state. The rescan can be disabled by setting the interval to 0.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithipipenabled","title":"fn spec.withIpipEnabled","text":"<pre><code>withIpipEnabled(ipipEnabled)\n</code></pre> <p>\"IPIPEnabled overrides whether Felix should configure an IPIP interface on the host. Optional as Felix determines this based on the existing IP pools. [Default: nil (unset)]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithipipmtu","title":"fn spec.withIpipMTU","text":"<pre><code>withIpipMTU(ipipMTU)\n</code></pre> <p>\"IPIPMTU is the MTU to set on the tunnel device. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithipsetsrefreshinterval","title":"fn spec.withIpsetsRefreshInterval","text":"<pre><code>withIpsetsRefreshInterval(ipsetsRefreshInterval)\n</code></pre> <p>\"IpsetsRefreshInterval is the period at which Felix re-checks all iptables state to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable iptables refresh. [Default: 90s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptablesbackend","title":"fn spec.withIptablesBackend","text":"<pre><code>withIptablesBackend(iptablesBackend)\n</code></pre> <p>\"IptablesBackend specifies which backend of iptables will be used. The default is Auto.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptablesfilterallowaction","title":"fn spec.withIptablesFilterAllowAction","text":"<pre><code>withIptablesFilterAllowAction(iptablesFilterAllowAction)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptableslockfilepath","title":"fn spec.withIptablesLockFilePath","text":"<pre><code>withIptablesLockFilePath(iptablesLockFilePath)\n</code></pre> <p>\"IptablesLockFilePath is the location of the iptables lock file. You may need to change this if the lock file is not in its standard location (for example if you have mapped it into Felix's container at a different path). [Default: /run/xtables.lock]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptableslockprobeinterval","title":"fn spec.withIptablesLockProbeInterval","text":"<pre><code>withIptablesLockProbeInterval(iptablesLockProbeInterval)\n</code></pre> <p>\"IptablesLockProbeInterval is the time that Felix will wait between attempts to acquire the iptables lock if it is not available. Lower values make Felix more responsive when the lock is contended, but use more CPU. [Default: 50ms]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptableslocktimeout","title":"fn spec.withIptablesLockTimeout","text":"<pre><code>withIptablesLockTimeout(iptablesLockTimeout)\n</code></pre> <p>\"IptablesLockTimeout is the time that Felix will wait for the iptables lock, or 0, to disable. To use this feature, Felix must share the iptables lock file with all other processes that also take the lock. When running Felix inside a container, this requires the /run directory of the host to be mounted into the calico/node or calico/felix container. [Default: 0s disabled]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptablesmangleallowaction","title":"fn spec.withIptablesMangleAllowAction","text":"<pre><code>withIptablesMangleAllowAction(iptablesMangleAllowAction)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptablesmarkmask","title":"fn spec.withIptablesMarkMask","text":"<pre><code>withIptablesMarkMask(iptablesMarkMask)\n</code></pre> <p>\"IptablesMarkMask is the mask that Felix selects its IPTables Mark bits from. Should be a 32 bit hexadecimal number with at least 8 bits set, none of which clash with any other mark bits in use on the system. [Default: 0xff000000]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptablesnatoutgoinginterfacefilter","title":"fn spec.withIptablesNATOutgoingInterfaceFilter","text":"<pre><code>withIptablesNATOutgoingInterfaceFilter(iptablesNATOutgoingInterfaceFilter)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptablespostwritecheckinterval","title":"fn spec.withIptablesPostWriteCheckInterval","text":"<pre><code>withIptablesPostWriteCheckInterval(iptablesPostWriteCheckInterval)\n</code></pre> <p>\"IptablesPostWriteCheckInterval is the period after Felix has done a write to the dataplane that it schedules an extra read back in order to check the write was not clobbered by another process. This should only occur if another application on the system doesn't respect the iptables lock. [Default: 1s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithiptablesrefreshinterval","title":"fn spec.withIptablesRefreshInterval","text":"<pre><code>withIptablesRefreshInterval(iptablesRefreshInterval)\n</code></pre> <p>\"IptablesRefreshInterval is the period at which Felix re-checks the IP sets in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable IP sets refresh. Note: the default for this value is lower than the other refresh intervals as a workaround for a Linux kernel bug that was fixed in kernel version 4.11. If you are using v4.11 or greater you may want to set this to, a higher value to reduce Felix CPU usage. [Default: 10s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithipv6support","title":"fn spec.withIpv6Support","text":"<pre><code>withIpv6Support(ipv6Support)\n</code></pre> <p>\"IPv6Support controls whether Felix enables support for IPv6 (if supported by the in-use dataplane).\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithkubenodeportranges","title":"fn spec.withKubeNodePortRanges","text":"<pre><code>withKubeNodePortRanges(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithkubenodeportrangesmixin","title":"fn spec.withKubeNodePortRangesMixin","text":"<pre><code>withKubeNodePortRangesMixin(kubeNodePortRanges)\n</code></pre> <p>\"KubeNodePortRanges holds list of port ranges used for service node ports. Only used if felix detects kube-proxy running in ipvs mode. Felix uses these ranges to separate host and workload traffic. [Default: 30000:32767].\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithlogdebugfilenameregex","title":"fn spec.withLogDebugFilenameRegex","text":"<pre><code>withLogDebugFilenameRegex(logDebugFilenameRegex)\n</code></pre> <p>\"LogDebugFilenameRegex controls which source code files have their Debug log output included in the logs. Only logs from files with names that match the given regular expression are included.  The filter only applies to Debug level logs.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithlogfilepath","title":"fn spec.withLogFilePath","text":"<pre><code>withLogFilePath(logFilePath)\n</code></pre> <p>\"LogFilePath is the full path to the Felix log. Set to none to disable file logging. [Default: /var/log/calico/felix.log]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithlogprefix","title":"fn spec.withLogPrefix","text":"<pre><code>withLogPrefix(logPrefix)\n</code></pre> <p>\"LogPrefix is the log prefix that Felix uses when rendering LOG rules. [Default: calico-packet]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithlogseverityfile","title":"fn spec.withLogSeverityFile","text":"<pre><code>withLogSeverityFile(logSeverityFile)\n</code></pre> <p>\"LogSeverityFile is the log severity above which logs are sent to the log file. [Default: Info]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithlogseveritysys","title":"fn spec.withLogSeveritySys","text":"<pre><code>withLogSeveritySys(logSeveritySys)\n</code></pre> <p>\"LogSeveritySys is the log severity above which logs are sent to the syslog. Set to None for no logging to syslog. [Default: Info]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithmaxipsetsize","title":"fn spec.withMaxIpsetSize","text":"<pre><code>withMaxIpsetSize(maxIpsetSize)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithmetadataaddr","title":"fn spec.withMetadataAddr","text":"<pre><code>withMetadataAddr(metadataAddr)\n</code></pre> <p>\"MetadataAddr is the IP address or domain name of the server that can answer VM queries for cloud-init metadata. In OpenStack, this corresponds to the machine running nova-api (or in Ubuntu, nova-api-metadata). A value of none (case insensitive) means that Felix should not set up any NAT rule for the metadata path. [Default: 127.0.0.1]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithmetadataport","title":"fn spec.withMetadataPort","text":"<pre><code>withMetadataPort(metadataPort)\n</code></pre> <p>\"MetadataPort is the port of the metadata server. This, combined with global.MetadataAddr (if not 'None'), is used to set up a NAT rule, from 169.254.169.254:80 to MetadataAddr:MetadataPort. In most cases this should not need to be changed [Default: 8775].\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithmtuifacepattern","title":"fn spec.withMtuIfacePattern","text":"<pre><code>withMtuIfacePattern(mtuIfacePattern)\n</code></pre> <p>\"MTUIfacePattern is a regular expression that controls which interfaces Felix should scan in order to calculate the host's MTU. This should not match workload interfaces (usually named cali...).\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithnatoutgoingaddress","title":"fn spec.withNatOutgoingAddress","text":"<pre><code>withNatOutgoingAddress(natOutgoingAddress)\n</code></pre> <p>\"NATOutgoingAddress specifies an address to use when performing source NAT for traffic in a natOutgoing pool that is leaving the network. By default the address used is an address on the interface the traffic is leaving on (ie it uses the iptables MASQUERADE target)\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithnatportrange","title":"fn spec.withNatPortRange","text":"<pre><code>withNatPortRange(natPortRange)\n</code></pre> <p>\"NATPortRange specifies the range of ports that is used for port mapping when doing outgoing NAT. When unset the default behavior of the network stack is used.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithnetlinktimeout","title":"fn spec.withNetlinkTimeout","text":"<pre><code>withNetlinkTimeout(netlinkTimeout)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithopenstackregion","title":"fn spec.withOpenstackRegion","text":"<pre><code>withOpenstackRegion(openstackRegion)\n</code></pre> <p>\"OpenstackRegion is the name of the region that a particular Felix belongs to. In a multi-region Calico/OpenStack deployment, this must be configured somehow for each Felix (here in the datamodel, or in felix.cfg or the environment on each compute node), and must match the [calico] openstack_region value configured in neutron.conf on each node. [Default: Empty]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithpolicysyncpathprefix","title":"fn spec.withPolicySyncPathPrefix","text":"<pre><code>withPolicySyncPathPrefix(policySyncPathPrefix)\n</code></pre> <p>\"PolicySyncPathPrefix is used to by Felix to communicate policy changes to external services, like Application layer policy. [Default: Empty]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithprometheusgometricsenabled","title":"fn spec.withPrometheusGoMetricsEnabled","text":"<pre><code>withPrometheusGoMetricsEnabled(prometheusGoMetricsEnabled)\n</code></pre> <p>\"PrometheusGoMetricsEnabled disables Go runtime metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsenabled","title":"fn spec.withPrometheusMetricsEnabled","text":"<pre><code>withPrometheusMetricsEnabled(prometheusMetricsEnabled)\n</code></pre> <p>\"PrometheusMetricsEnabled enables the Prometheus metrics server in Felix if set to true. [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithprometheusmetricshost","title":"fn spec.withPrometheusMetricsHost","text":"<pre><code>withPrometheusMetricsHost(prometheusMetricsHost)\n</code></pre> <p>\"PrometheusMetricsHost is the host that the Prometheus metrics server should bind to. [Default: empty]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. [Default: 9091]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithprometheusprocessmetricsenabled","title":"fn spec.withPrometheusProcessMetricsEnabled","text":"<pre><code>withPrometheusProcessMetricsEnabled(prometheusProcessMetricsEnabled)\n</code></pre> <p>\"PrometheusProcessMetricsEnabled disables process metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithprometheuswireguardmetricsenabled","title":"fn spec.withPrometheusWireGuardMetricsEnabled","text":"<pre><code>withPrometheusWireGuardMetricsEnabled(prometheusWireGuardMetricsEnabled)\n</code></pre> <p>\"PrometheusWireGuardMetricsEnabled disables wireguard metrics collection, which the Prometheus client does by default, when set to false. This reduces the number of metrics reported, reducing Prometheus load. [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithremoveexternalroutes","title":"fn spec.withRemoveExternalRoutes","text":"<pre><code>withRemoveExternalRoutes(removeExternalRoutes)\n</code></pre> <p>\"Whether or not to remove device routes that have not been programmed by Felix. Disabling this will allow external applications to also add device routes. This is enabled by default which means we will remove externally added routes.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithreportinginterval","title":"fn spec.withReportingInterval","text":"<pre><code>withReportingInterval(reportingInterval)\n</code></pre> <p>\"ReportingInterval is the interval at which Felix reports its status into the datastore or 0 to disable. Must be non-zero in OpenStack deployments. [Default: 30s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithreportingttl","title":"fn spec.withReportingTTL","text":"<pre><code>withReportingTTL(reportingTTL)\n</code></pre> <p>\"ReportingTTL is the time-to-live setting for process-wide status reports. [Default: 90s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithrouterefreshinterval","title":"fn spec.withRouteRefreshInterval","text":"<pre><code>withRouteRefreshInterval(routeRefreshInterval)\n</code></pre> <p>\"RouteRefreshInterval is the period at which Felix re-checks the routes in the dataplane to ensure that no other process has accidentally broken Calico's rules. Set to 0 to disable route refresh. [Default: 90s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithroutesource","title":"fn spec.withRouteSource","text":"<pre><code>withRouteSource(routeSource)\n</code></pre> <p>\"RouteSource configures where Felix gets its routing information. - WorkloadIPs: use workload endpoints to construct routes. - CalicoIPAM: the default - use IPAM data to construct routes.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithroutesyncdisabled","title":"fn spec.withRouteSyncDisabled","text":"<pre><code>withRouteSyncDisabled(routeSyncDisabled)\n</code></pre> <p>\"RouteSyncDisabled will disable all operations performed on the route table. Set to true to run in network-policy mode only.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithroutetableranges","title":"fn spec.withRouteTableRanges","text":"<pre><code>withRouteTableRanges(routeTableRanges)\n</code></pre> <p>\"Calico programs additional Linux route tables for various purposes. RouteTableRanges specifies a set of table index ranges that Calico should use. Deprecates<code>RouteTableRange</code>, overrides <code>RouteTableRange</code>.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithroutetablerangesmixin","title":"fn spec.withRouteTableRangesMixin","text":"<pre><code>withRouteTableRangesMixin(routeTableRanges)\n</code></pre> <p>\"Calico programs additional Linux route tables for various purposes. RouteTableRanges specifies a set of table index ranges that Calico should use. Deprecates<code>RouteTableRange</code>, overrides <code>RouteTableRange</code>.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithserviceloopprevention","title":"fn spec.withServiceLoopPrevention","text":"<pre><code>withServiceLoopPrevention(serviceLoopPrevention)\n</code></pre> <p>\"When service IP advertisement is enabled, prevent routing loops to service IPs that are not in use, by dropping or rejecting packets that do not get DNAT'd by kube-proxy. Unless set to \\\"Disabled\\\", in which case such routing loops continue to be allowed. [Default: Drop]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithsidecaraccelerationenabled","title":"fn spec.withSidecarAccelerationEnabled","text":"<pre><code>withSidecarAccelerationEnabled(sidecarAccelerationEnabled)\n</code></pre> <p>\"SidecarAccelerationEnabled enables experimental sidecar acceleration [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithusagereportingenabled","title":"fn spec.withUsageReportingEnabled","text":"<pre><code>withUsageReportingEnabled(usageReportingEnabled)\n</code></pre> <p>\"UsageReportingEnabled reports anonymous Calico version number and cluster size to projectcalico.org. Logs warnings returned by the usage server. For example, if a significant security vulnerability has been discovered in the version of Calico being used. [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithusagereportinginitialdelay","title":"fn spec.withUsageReportingInitialDelay","text":"<pre><code>withUsageReportingInitialDelay(usageReportingInitialDelay)\n</code></pre> <p>\"UsageReportingInitialDelay controls the minimum delay before Felix makes a report. [Default: 300s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithusagereportinginterval","title":"fn spec.withUsageReportingInterval","text":"<pre><code>withUsageReportingInterval(usageReportingInterval)\n</code></pre> <p>\"UsageReportingInterval controls the interval at which Felix makes reports. [Default: 86400s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithuseinternaldataplanedriver","title":"fn spec.withUseInternalDataplaneDriver","text":"<pre><code>withUseInternalDataplaneDriver(useInternalDataplaneDriver)\n</code></pre> <p>\"UseInternalDataplaneDriver, if true, Felix will use its internal dataplane programming logic.  If false, it will launch an external dataplane driver and communicate with it over protobuf.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithvxlanenabled","title":"fn spec.withVxlanEnabled","text":"<pre><code>withVxlanEnabled(vxlanEnabled)\n</code></pre> <p>\"VXLANEnabled overrides whether Felix should create the VXLAN tunnel device for IPv4 VXLAN networking. Optional as Felix determines this based on the existing IP pools. [Default: nil (unset)]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithvxlanmtu","title":"fn spec.withVxlanMTU","text":"<pre><code>withVxlanMTU(vxlanMTU)\n</code></pre> <p>\"VXLANMTU is the MTU to set on the IPv4 VXLAN tunnel device. See Configuring MTU [Default: 1410]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithvxlanmtuv6","title":"fn spec.withVxlanMTUV6","text":"<pre><code>withVxlanMTUV6(vxlanMTUV6)\n</code></pre> <p>\"VXLANMTUV6 is the MTU to set on the IPv6 VXLAN tunnel device. See Configuring MTU [Default: 1390]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithvxlanport","title":"fn spec.withVxlanPort","text":"<pre><code>withVxlanPort(vxlanPort)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithvxlanvni","title":"fn spec.withVxlanVNI","text":"<pre><code>withVxlanVNI(vxlanVNI)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardenabled","title":"fn spec.withWireguardEnabled","text":"<pre><code>withWireguardEnabled(wireguardEnabled)\n</code></pre> <p>\"WireguardEnabled controls whether Wireguard is enabled for IPv4 (encapsulating IPv4 traffic over an IPv4 underlay network). [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardenabledv6","title":"fn spec.withWireguardEnabledV6","text":"<pre><code>withWireguardEnabledV6(wireguardEnabledV6)\n</code></pre> <p>\"WireguardEnabledV6 controls whether Wireguard is enabled for IPv6 (encapsulating IPv6 traffic over an IPv6 underlay network). [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardhostencryptionenabled","title":"fn spec.withWireguardHostEncryptionEnabled","text":"<pre><code>withWireguardHostEncryptionEnabled(wireguardHostEncryptionEnabled)\n</code></pre> <p>\"WireguardHostEncryptionEnabled controls whether Wireguard host-to-host encryption is enabled. [Default: false]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacename","title":"fn spec.withWireguardInterfaceName","text":"<pre><code>withWireguardInterfaceName(wireguardInterfaceName)\n</code></pre> <p>\"WireguardInterfaceName specifies the name to use for the IPv4 Wireguard interface. [Default: wireguard.cali]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardinterfacenamev6","title":"fn spec.withWireguardInterfaceNameV6","text":"<pre><code>withWireguardInterfaceNameV6(wireguardInterfaceNameV6)\n</code></pre> <p>\"WireguardInterfaceNameV6 specifies the name to use for the IPv6 Wireguard interface. [Default: wg-v6.cali]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardkeepalive","title":"fn spec.withWireguardKeepAlive","text":"<pre><code>withWireguardKeepAlive(wireguardKeepAlive)\n</code></pre> <p>\"WireguardKeepAlive controls Wireguard PersistentKeepalive option. Set 0 to disable. [Default: 0]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningport","title":"fn spec.withWireguardListeningPort","text":"<pre><code>withWireguardListeningPort(wireguardListeningPort)\n</code></pre> <p>\"WireguardListeningPort controls the listening port used by IPv4 Wireguard. [Default: 51820]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardlisteningportv6","title":"fn spec.withWireguardListeningPortV6","text":"<pre><code>withWireguardListeningPortV6(wireguardListeningPortV6)\n</code></pre> <p>\"WireguardListeningPortV6 controls the listening port used by IPv6 Wireguard. [Default: 51821]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardmtu","title":"fn spec.withWireguardMTU","text":"<pre><code>withWireguardMTU(wireguardMTU)\n</code></pre> <p>\"WireguardMTU controls the MTU on the IPv4 Wireguard interface. See Configuring MTU [Default: 1440]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardmtuv6","title":"fn spec.withWireguardMTUV6","text":"<pre><code>withWireguardMTUV6(wireguardMTUV6)\n</code></pre> <p>\"WireguardMTUV6 controls the MTU on the IPv6 Wireguard interface. See Configuring MTU [Default: 1420]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithwireguardroutingrulepriority","title":"fn spec.withWireguardRoutingRulePriority","text":"<pre><code>withWireguardRoutingRulePriority(wireguardRoutingRulePriority)\n</code></pre> <p>\"WireguardRoutingRulePriority controls the priority value to use for the Wireguard routing rule. [Default: 99]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithworkloadsourcespoofing","title":"fn spec.withWorkloadSourceSpoofing","text":"<pre><code>withWorkloadSourceSpoofing(workloadSourceSpoofing)\n</code></pre> <p>\"WorkloadSourceSpoofing controls whether pods can use the allowedSourcePrefixes annotation to send traffic with a source IP address that is not theirs. This is disabled by default. When set to \\\"Any\\\", pods can request any prefix.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithxdpenabled","title":"fn spec.withXdpEnabled","text":"<pre><code>withXdpEnabled(xdpEnabled)\n</code></pre> <p>\"XDPEnabled enables XDP acceleration for suitable untracked incoming deny rules. [Default: true]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specwithxdprefreshinterval","title":"fn spec.withXdpRefreshInterval","text":"<pre><code>withXdpRefreshInterval(xdpRefreshInterval)\n</code></pre> <p>\"XDPRefreshInterval is the period at which Felix re-checks all XDP state to ensure that no other process has accidentally broken Calico's BPF maps or attached programs. Set to 0 to disable XDP refresh. [Default: 90s]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#obj-specfailsafeinboundhostports","title":"obj spec.failsafeInboundHostPorts","text":"<p>\"FailsafeInboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow incoming traffic to host endpoints on irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all inbound host ports, use the value none. The default value allows ssh access and DHCP. [Default: tcp:22, udp:68, tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithnet","title":"fn spec.failsafeInboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithport","title":"fn spec.failsafeInboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specfailsafeinboundhostportswithprotocol","title":"fn spec.failsafeInboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#obj-specfailsafeoutboundhostports","title":"obj spec.failsafeOutboundHostPorts","text":"<p>\"FailsafeOutboundHostPorts is a list of UDP/TCP ports and CIDRs that Felix will allow outgoing traffic from host endpoints to irrespective of the security policy. This is useful to avoid accidentally cutting off a host with incorrect configuration. For back-compatibility, if the protocol is not specified, it defaults to \\\"tcp\\\". If a CIDR is not specified, it will allow traffic from all addresses. To disable all outbound host ports, use the value none. The default value opens etcd's standard ports to ensure that Felix does not get cut off from etcd as well as allowing DHCP and DNS. [Default: tcp:179, tcp:2379, tcp:2380, tcp:6443, tcp:6666, tcp:6667, udp:53, udp:67]\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithnet","title":"fn spec.failsafeOutboundHostPorts.withNet","text":"<pre><code>withNet(net)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithport","title":"fn spec.failsafeOutboundHostPorts.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specfailsafeoutboundhostportswithprotocol","title":"fn spec.failsafeOutboundHostPorts.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#obj-spechealthtimeoutoverrides","title":"obj spec.healthTimeoutOverrides","text":"<p>\"HealthTimeoutOverrides allows the internal watchdog timeouts of individual subcomponents to be overriden.  This is useful for working around \\\"false positive\\\" liveness timeouts that can occur in particularly stressful workloads or if CPU is constrained.  For a list of active subcomponents, see Felix's logs.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-spechealthtimeoutoverrideswithname","title":"fn spec.healthTimeoutOverrides.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-spechealthtimeoutoverrideswithtimeout","title":"fn spec.healthTimeoutOverrides.withTimeout","text":"<pre><code>withTimeout(timeout)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#obj-specroutetablerange","title":"obj spec.routeTableRange","text":"<p>\"Deprecated in favor of RouteTableRanges. Calico programs additional Linux route tables for various purposes. RouteTableRange specifies the indices of the route tables that Calico should use.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specroutetablerangewithmax","title":"fn spec.routeTableRange.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specroutetablerangewithmin","title":"fn spec.routeTableRange.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#obj-specroutetableranges","title":"obj spec.routeTableRanges","text":"<p>\"Calico programs additional Linux route tables for various purposes. RouteTableRanges specifies a set of table index ranges that Calico should use. Deprecates<code>RouteTableRange</code>, overrides <code>RouteTableRange</code>.\"</p>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specroutetablerangeswithmax","title":"fn spec.routeTableRanges.withMax","text":"<pre><code>withMax(max)\n</code></pre>"},{"location":"3.25/crd/v1/felixConfiguration/#fn-specroutetablerangeswithmin","title":"fn spec.routeTableRanges.withMin","text":"<pre><code>withMin(min)\n</code></pre>"},{"location":"3.25/crd/v1/globalNetworkPolicy/","title":"crd.v1.globalNetworkPolicy","text":""},{"location":"3.25/crd/v1/globalNetworkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withApplyOnForward(applyOnForward)</code></li> <li><code>fn withDoNotTrack(doNotTrack)</code></li> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withPreDNAT(preDNAT)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkPolicy</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithapplyonforward","title":"fn spec.withApplyOnForward","text":"<pre><code>withApplyOnForward(applyOnForward)\n</code></pre> <p>\"ApplyOnForward indicates to apply the rules in this policy on forward traffic.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithdonottrack","title":"fn spec.withDoNotTrack","text":"<pre><code>withDoNotTrack(doNotTrack)\n</code></pre> <p>\"DoNotTrack indicates whether packets matched by the rules in this policy should go through the data plane's connection tracking, such as Linux conntrack.  If True, the rules in this policy are applied before any data plane connection tracking, and packets allowed by this policy are marked as not to be tracked.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithnamespaceselector","title":"fn spec.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field for an expression used to select a pod based on namespaces.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithprednat","title":"fn spec.withPreDNAT","text":"<pre><code>withPreDNAT(preDNAT)\n</code></pre> <p>\"PreDNAT indicates to apply the rules in this policy before any DNAT.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress rules are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/globalNetworkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/","title":"crd.v1.globalNetworkSet","text":"<p>\"GlobalNetworkSet contains a set of arbitrary IP sub-networks/CIDRs that share labels to allow rules to refer to them via selectors.  The labels of GlobalNetworkSet are not namespaced.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/globalNetworkSet/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/globalNetworkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of GlobalNetworkSet</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#obj-spec","title":"obj spec","text":"<p>\"GlobalNetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.25/crd/v1/globalNetworkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/","title":"crd.v1.hostEndpoint","text":""},{"location":"3.25/crd/v1/hostEndpoint/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withExpectedIPs(expectedIPs)</code></li> <li><code>fn withExpectedIPsMixin(expectedIPs)</code></li> <li><code>fn withInterfaceName(interfaceName)</code></li> <li><code>fn withNode(node)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withProfiles(profiles)</code></li> <li><code>fn withProfilesMixin(profiles)</code></li> <li><code>obj spec.ports</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withPort(port)</code></li> <li><code>fn withProtocol(protocol)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/hostEndpoint/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/hostEndpoint/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of HostEndpoint</p>"},{"location":"3.25/crd/v1/hostEndpoint/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#obj-spec","title":"obj spec","text":"<p>\"HostEndpointSpec contains the specification for a HostEndpoint resource.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithexpectedips","title":"fn spec.withExpectedIPs","text":"<pre><code>withExpectedIPs(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithexpectedipsmixin","title":"fn spec.withExpectedIPsMixin","text":"<pre><code>withExpectedIPsMixin(expectedIPs)\n</code></pre> <p>\"The expected IP addresses (IPv4 and IPv6) of the endpoint. If \\\"InterfaceName\\\" is not present, Calico will look for an interface matching any of the IPs in the list and apply policy to that. Note: \\tWhen using the selector match criteria in an ingress or egress security Policy \\tor Profile, Calico converts the selector into a set of IP addresses. For host \\tendpoints, the ExpectedIPs field is used for that purpose. (If only the interface \\tname is specified, Calico does not learn the IPs of the interface for use in match \\tcriteria.)\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithinterfacename","title":"fn spec.withInterfaceName","text":"<pre><code>withInterfaceName(interfaceName)\n</code></pre> <p>\"Either \\\"\\\", or the name of a specific Linux interface to apply policy to; or empty.  \\\"\\\" indicates that this HostEndpoint governs all traffic to, from or through the default network namespace of the host named by the \\\"Node\\\" field; entering and leaving that namespace via any interface, including those from/to non-host-networked local workloads. \\n If InterfaceName is not \\\"\\\", this HostEndpoint only governs traffic that enters or leaves the host through the specific interface named by InterfaceName, or - when InterfaceName is empty - through the specific interface that has one of the IPs in ExpectedIPs. Therefore, when InterfaceName is empty, at least one expected IP must be specified.  Only external interfaces (such as \\\"eth0\\\") are supported here; it isn't possible for a HostEndpoint to protect traffic through a specific local workload interface. \\n Note: Only some kinds of policy are implemented for \\\"\\\" HostEndpoints; initially just pre-DNAT policy.  Please check Calico documentation for the latest position.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithnode","title":"fn spec.withNode","text":"<pre><code>withNode(node)\n</code></pre> <p>\"The node name identifying the Calico node instance.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithports","title":"fn spec.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithportsmixin","title":"fn spec.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithprofiles","title":"fn spec.withProfiles","text":"<pre><code>withProfiles(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specwithprofilesmixin","title":"fn spec.withProfilesMixin","text":"<pre><code>withProfilesMixin(profiles)\n</code></pre> <p>\"A list of identifiers of security Profile objects that apply to this endpoint. Each profile is applied in the order that they appear in this list.  Profile rules are applied after the selector-based security policy.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/hostEndpoint/#obj-specports","title":"obj spec.ports","text":"<p>\"Ports contains the endpoint's named ports, which may be referenced in security policy rules.\"</p>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specportswithname","title":"fn spec.ports.withName","text":"<pre><code>withName(name)\n</code></pre>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specportswithport","title":"fn spec.ports.withPort","text":"<pre><code>withPort(port)\n</code></pre>"},{"location":"3.25/crd/v1/hostEndpoint/#fn-specportswithprotocol","title":"fn spec.ports.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre>"},{"location":"3.25/crd/v1/ipReservation/","title":"crd.v1.ipReservation","text":""},{"location":"3.25/crd/v1/ipReservation/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withReservedCIDRs(reservedCIDRs)</code></li> <li><code>fn withReservedCIDRsMixin(reservedCIDRs)</code></li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/ipReservation/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/ipReservation/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPReservation</p>"},{"location":"3.25/crd/v1/ipReservation/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/ipReservation/#obj-spec","title":"obj spec","text":"<p>\"IPReservationSpec contains the specification for an IPReservation resource.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-specwithreservedcidrs","title":"fn spec.withReservedCIDRs","text":"<pre><code>withReservedCIDRs(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p>"},{"location":"3.25/crd/v1/ipReservation/#fn-specwithreservedcidrsmixin","title":"fn spec.withReservedCIDRsMixin","text":"<pre><code>withReservedCIDRsMixin(reservedCIDRs)\n</code></pre> <p>\"ReservedCIDRs is a list of CIDRs and/or IP addresses that Calico IPAM will exclude from new allocations.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/","title":"crd.v1.ipamBlock","text":""},{"location":"3.25/crd/v1/ipamBlock/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAffinity(affinity)</code></li> <li><code>fn withAllocations(allocations)</code></li> <li><code>fn withAllocationsMixin(allocations)</code></li> <li><code>fn withAttributes(attributes)</code></li> <li><code>fn withAttributesMixin(attributes)</code></li> <li><code>fn withCidr(cidr)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withSequenceNumber(sequenceNumber)</code></li> <li><code>fn withSequenceNumberForAllocation(sequenceNumberForAllocation)</code></li> <li><code>fn withSequenceNumberForAllocationMixin(sequenceNumberForAllocation)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> <li><code>fn withUnallocated(unallocated)</code></li> <li><code>fn withUnallocatedMixin(unallocated)</code></li> <li><code>obj spec.attributes</code><ul> <li><code>fn withHandle_id(handle_id)</code></li> <li><code>fn withSecondary(secondary)</code></li> <li><code>fn withSecondaryMixin(secondary)</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/ipamBlock/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/ipamBlock/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMBlock</p>"},{"location":"3.25/crd/v1/ipamBlock/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#obj-spec","title":"obj spec","text":"<p>\"IPAMBlockSpec contains the specification for an IPAMBlock resource.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithaffinity","title":"fn spec.withAffinity","text":"<pre><code>withAffinity(affinity)\n</code></pre> <p>\"Affinity of the block, if this block has one. If set, it will be of the form \\\"host:\\\". If not set, this block is not affine to a host.\""},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithallocations","title":"fn spec.withAllocations","text":"<pre><code>withAllocations(allocations)\n</code></pre> <p>\"Array of allocations in-use within this block. nil entries mean the allocation is free. For non-nil entries at index i, the index is the ordinal of the allocation within this block and the value is the index of the associated attributes in the Attributes array.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithallocationsmixin","title":"fn spec.withAllocationsMixin","text":"<pre><code>withAllocationsMixin(allocations)\n</code></pre> <p>\"Array of allocations in-use within this block. nil entries mean the allocation is free. For non-nil entries at index i, the index is the ordinal of the allocation within this block and the value is the index of the associated attributes in the Attributes array.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithattributes","title":"fn spec.withAttributes","text":"<pre><code>withAttributes(attributes)\n</code></pre> <p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithattributesmixin","title":"fn spec.withAttributesMixin","text":"<pre><code>withAttributesMixin(attributes)\n</code></pre> <p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithcidr","title":"fn spec.withCidr","text":"<pre><code>withCidr(cidr)\n</code></pre> <p>\"The block's CIDR.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre> <p>\"Deleted is an internal boolean used to workaround a limitation in the Kubernetes API whereby deletion will not return a conflict error if the block has been updated. It should not be set manually.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithsequencenumber","title":"fn spec.withSequenceNumber","text":"<pre><code>withSequenceNumber(sequenceNumber)\n</code></pre> <p>\"We store a sequence number that is updated each time the block is written. Each allocation will also store the sequence number of the block at the time of its creation. When releasing an IP, passing the sequence number associated with the allocation allows us to protect against a race condition and ensure the IP hasn't been released and re-allocated since the release request.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithsequencenumberforallocation","title":"fn spec.withSequenceNumberForAllocation","text":"<pre><code>withSequenceNumberForAllocation(sequenceNumberForAllocation)\n</code></pre> <p>\"Map of allocated ordinal within the block to sequence number of the block at the time of allocation. Kubernetes does not allow numerical keys for maps, so the key is cast to a string.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithsequencenumberforallocationmixin","title":"fn spec.withSequenceNumberForAllocationMixin","text":"<pre><code>withSequenceNumberForAllocationMixin(sequenceNumberForAllocation)\n</code></pre> <p>\"Map of allocated ordinal within the block to sequence number of the block at the time of allocation. Kubernetes does not allow numerical keys for maps, so the key is cast to a string.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre> <p>\"StrictAffinity on the IPAMBlock is deprecated and no longer used by the code. Use IPAMConfig StrictAffinity instead.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithunallocated","title":"fn spec.withUnallocated","text":"<pre><code>withUnallocated(unallocated)\n</code></pre> <p>\"Unallocated is an ordered list of allocations which are free in the block.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specwithunallocatedmixin","title":"fn spec.withUnallocatedMixin","text":"<pre><code>withUnallocatedMixin(unallocated)\n</code></pre> <p>\"Unallocated is an ordered list of allocations which are free in the block.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamBlock/#obj-specattributes","title":"obj spec.attributes","text":"<p>\"Attributes is an array of arbitrary metadata associated with allocations in the block. To find attributes for a given allocation, use the value of the allocation's entry in the Allocations array as the index of the element in this array.\"</p>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specattributeswithhandle_id","title":"fn spec.attributes.withHandle_id","text":"<pre><code>withHandle_id(handle_id)\n</code></pre>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specattributeswithsecondary","title":"fn spec.attributes.withSecondary","text":"<pre><code>withSecondary(secondary)\n</code></pre>"},{"location":"3.25/crd/v1/ipamBlock/#fn-specattributeswithsecondarymixin","title":"fn spec.attributes.withSecondaryMixin","text":"<pre><code>withSecondaryMixin(secondary)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamConfig/","title":"crd.v1.ipamConfig","text":""},{"location":"3.25/crd/v1/ipamConfig/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withAutoAllocateBlocks(autoAllocateBlocks)</code></li> <li><code>fn withMaxBlocksPerHost(maxBlocksPerHost)</code></li> <li><code>fn withStrictAffinity(strictAffinity)</code></li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/ipamConfig/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/ipamConfig/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMConfig</p>"},{"location":"3.25/crd/v1/ipamConfig/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#obj-spec","title":"obj spec","text":"<p>\"IPAMConfigSpec contains the specification for an IPAMConfig resource.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-specwithautoallocateblocks","title":"fn spec.withAutoAllocateBlocks","text":"<pre><code>withAutoAllocateBlocks(autoAllocateBlocks)\n</code></pre>"},{"location":"3.25/crd/v1/ipamConfig/#fn-specwithmaxblocksperhost","title":"fn spec.withMaxBlocksPerHost","text":"<pre><code>withMaxBlocksPerHost(maxBlocksPerHost)\n</code></pre> <p>\"MaxBlocksPerHost, if non-zero, is the max number of blocks that can be affine to each host.\"</p>"},{"location":"3.25/crd/v1/ipamConfig/#fn-specwithstrictaffinity","title":"fn spec.withStrictAffinity","text":"<pre><code>withStrictAffinity(strictAffinity)\n</code></pre>"},{"location":"3.25/crd/v1/ipamHandle/","title":"crd.v1.ipamHandle","text":""},{"location":"3.25/crd/v1/ipamHandle/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withBlock(block)</code></li> <li><code>fn withBlockMixin(block)</code></li> <li><code>fn withDeleted(deleted)</code></li> <li><code>fn withHandleID(handleID)</code></li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/ipamHandle/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/ipamHandle/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of IPAMHandle</p>"},{"location":"3.25/crd/v1/ipamHandle/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#obj-spec","title":"obj spec","text":"<p>\"IPAMHandleSpec contains the specification for an IPAMHandle resource.\"</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-specwithblock","title":"fn spec.withBlock","text":"<pre><code>withBlock(block)\n</code></pre>"},{"location":"3.25/crd/v1/ipamHandle/#fn-specwithblockmixin","title":"fn spec.withBlockMixin","text":"<pre><code>withBlockMixin(block)\n</code></pre> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/ipamHandle/#fn-specwithdeleted","title":"fn spec.withDeleted","text":"<pre><code>withDeleted(deleted)\n</code></pre>"},{"location":"3.25/crd/v1/ipamHandle/#fn-specwithhandleid","title":"fn spec.withHandleID","text":"<pre><code>withHandleID(handleID)\n</code></pre>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/","title":"crd.v1.kubeControllersConfiguration","text":""},{"location":"3.25/crd/v1/kubeControllersConfiguration/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withDebugProfilePort(debugProfilePort)</code></li> <li><code>fn withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)</code></li> <li><code>fn withHealthChecks(healthChecks)</code></li> <li><code>fn withLogSeverityScreen(logSeverityScreen)</code></li> <li><code>fn withPrometheusMetricsPort(prometheusMetricsPort)</code></li> <li><code>obj spec.controllers</code><ul> <li><code>obj spec.controllers.namespace</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.node</code><ul> <li><code>fn withLeakGracePeriod(leakGracePeriod)</code></li> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> <li><code>fn withSyncLabels(syncLabels)</code></li> <li><code>obj spec.controllers.node.hostEndpoint</code><ul> <li><code>fn withAutoCreate(autoCreate)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.controllers.policy</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.serviceAccount</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> <li><code>obj spec.controllers.workloadEndpoint</code><ul> <li><code>fn withReconcilerPeriod(reconcilerPeriod)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of KubeControllersConfiguration</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-spec","title":"obj spec","text":"<p>\"KubeControllersConfigurationSpec contains the values of the Kubernetes controllers configuration.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-specwithdebugprofileport","title":"fn spec.withDebugProfilePort","text":"<pre><code>withDebugProfilePort(debugProfilePort)\n</code></pre> <p>\"DebugProfilePort configures the port to serve memory and cpu profiles on. If not specified, profiling is disabled.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-specwithetcdv3compactionperiod","title":"fn spec.withEtcdV3CompactionPeriod","text":"<pre><code>withEtcdV3CompactionPeriod(etcdV3CompactionPeriod)\n</code></pre> <p>\"EtcdV3CompactionPeriod is the period between etcdv3 compaction requests. Set to 0 to disable. [Default: 10m]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-specwithhealthchecks","title":"fn spec.withHealthChecks","text":"<pre><code>withHealthChecks(healthChecks)\n</code></pre> <p>\"HealthChecks enables or disables support for health checks [Default: Enabled]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-specwithlogseverityscreen","title":"fn spec.withLogSeverityScreen","text":"<pre><code>withLogSeverityScreen(logSeverityScreen)\n</code></pre> <p>\"LogSeverityScreen is the log severity above which logs are sent to the stdout. [Default: Info]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-specwithprometheusmetricsport","title":"fn spec.withPrometheusMetricsPort","text":"<pre><code>withPrometheusMetricsPort(prometheusMetricsPort)\n</code></pre> <p>\"PrometheusMetricsPort is the TCP port that the Prometheus metrics server should bind to. Set to 0 to disable. [Default: 9094]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-speccontrollers","title":"obj spec.controllers","text":"<p>\"Controllers enables and configures individual Kubernetes controllers\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnamespace","title":"obj spec.controllers.namespace","text":"<p>\"Namespace enables and configures the namespace controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnamespacewithreconcilerperiod","title":"fn spec.controllers.namespace.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnode","title":"obj spec.controllers.node","text":"<p>\"Node enables and configures the node controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithleakgraceperiod","title":"fn spec.controllers.node.withLeakGracePeriod","text":"<pre><code>withLeakGracePeriod(leakGracePeriod)\n</code></pre> <p>\"LeakGracePeriod is the period used by the controller to determine if an IP address has been leaked. Set to 0 to disable IP garbage collection. [Default: 15m]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithreconcilerperiod","title":"fn spec.controllers.node.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodewithsynclabels","title":"fn spec.controllers.node.withSyncLabels","text":"<pre><code>withSyncLabels(syncLabels)\n</code></pre> <p>\"SyncLabels controls whether to copy Kubernetes node labels to Calico nodes. [Default: Enabled]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-speccontrollersnodehostendpoint","title":"obj spec.controllers.node.hostEndpoint","text":"<p>\"HostEndpoint controls syncing nodes to host endpoints. Disabled by default, set to nil to disable.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollersnodehostendpointwithautocreate","title":"fn spec.controllers.node.hostEndpoint.withAutoCreate","text":"<pre><code>withAutoCreate(autoCreate)\n</code></pre> <p>\"AutoCreate enables automatic creation of host endpoints for every node. [Default: Disabled]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-speccontrollerspolicy","title":"obj spec.controllers.policy","text":"<p>\"Policy enables and configures the policy controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollerspolicywithreconcilerperiod","title":"fn spec.controllers.policy.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-speccontrollersserviceaccount","title":"obj spec.controllers.serviceAccount","text":"<p>\"ServiceAccount enables and configures the service account controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollersserviceaccountwithreconcilerperiod","title":"fn spec.controllers.serviceAccount.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#obj-speccontrollersworkloadendpoint","title":"obj spec.controllers.workloadEndpoint","text":"<p>\"WorkloadEndpoint enables and configures the workload endpoint controller. Enabled by default, set to nil to disable.\"</p>"},{"location":"3.25/crd/v1/kubeControllersConfiguration/#fn-speccontrollersworkloadendpointwithreconcilerperiod","title":"fn spec.controllers.workloadEndpoint.withReconcilerPeriod","text":"<pre><code>withReconcilerPeriod(reconcilerPeriod)\n</code></pre> <p>\"ReconcilerPeriod is the period to perform reconciliation with the Calico datastore. [Default: 5m]\"</p>"},{"location":"3.25/crd/v1/networkPolicy/","title":"crd.v1.networkPolicy","text":""},{"location":"3.25/crd/v1/networkPolicy/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withEgress(egress)</code></li> <li><code>fn withEgressMixin(egress)</code></li> <li><code>fn withIngress(ingress)</code></li> <li><code>fn withIngressMixin(ingress)</code></li> <li><code>fn withOrder(order)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>fn withServiceAccountSelector(serviceAccountSelector)</code></li> <li><code>fn withTypes(types)</code></li> <li><code>fn withTypesMixin(types)</code></li> <li><code>obj spec.egress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.egress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.egress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.egress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.egress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.egress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.egress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.egress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> <li><code>obj spec.ingress</code><ul> <li><code>fn withAction(action)</code></li> <li><code>fn withIpVersion(ipVersion)</code></li> <li><code>fn withNotProtocol(notProtocol)</code></li> <li><code>fn withProtocol(protocol)</code></li> <li><code>obj spec.ingress.destination</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.destination.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.destination.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.http</code><ul> <li><code>fn withMethods(methods)</code></li> <li><code>fn withMethodsMixin(methods)</code></li> <li><code>fn withPaths(paths)</code></li> <li><code>fn withPathsMixin(paths)</code></li> <li><code>obj spec.ingress.http.paths</code><ul> <li><code>fn withExact(exact)</code></li> <li><code>fn withPrefix(prefix)</code></li> </ul> </li> </ul> </li> <li><code>obj spec.ingress.icmp</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> </ul> </li> <li><code>obj spec.ingress.notICMP</code><ul> <li><code>fn withCode(code)</code></li> <li><code>fn withType(type)</code></li> </ul> </li> <li><code>obj spec.ingress.source</code><ul> <li><code>fn withNamespaceSelector(namespaceSelector)</code></li> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> <li><code>fn withNotNets(notNets)</code></li> <li><code>fn withNotNetsMixin(notNets)</code></li> <li><code>fn withNotPorts(notPorts)</code></li> <li><code>fn withNotPortsMixin(notPorts)</code></li> <li><code>fn withNotSelector(notSelector)</code></li> <li><code>fn withPorts(ports)</code></li> <li><code>fn withPortsMixin(ports)</code></li> <li><code>fn withSelector(selector)</code></li> <li><code>obj spec.ingress.source.serviceAccounts</code><ul> <li><code>fn withNames(names)</code></li> <li><code>fn withNamesMixin(names)</code></li> <li><code>fn withSelector(selector)</code></li> </ul> </li> <li><code>obj spec.ingress.source.services</code><ul> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/networkPolicy/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/networkPolicy/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkPolicy</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-spec","title":"obj spec","text":""},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithegress","title":"fn spec.withEgress","text":"<pre><code>withEgress(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithegressmixin","title":"fn spec.withEgressMixin","text":"<pre><code>withEgressMixin(egress)\n</code></pre> <p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithingress","title":"fn spec.withIngress","text":"<pre><code>withIngress(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithingressmixin","title":"fn spec.withIngressMixin","text":"<pre><code>withIngressMixin(ingress)\n</code></pre> <p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithorder","title":"fn spec.withOrder","text":"<pre><code>withOrder(order)\n</code></pre> <p>\"Order is an optional field that specifies the order in which the policy is applied. Policies with higher \\\"order\\\" are applied after those with lower order.  If the order is omitted, it may be considered to be \\\"infinite\\\" - i.e. the policy will be applied last.  Policies with identical order will be applied in alphanumerical order based on the Policy \\\"Name\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithselector","title":"fn spec.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"The selector is an expression used to pick pick out the endpoints that the policy should be applied to. \\n Selector expressions follow this syntax: \\n \\tlabel == \\\"string_literal\\\"  -&gt;  comparison, e.g. my_label == \\\"foo bar\\\" \\tlabel != \\\"string_literal\\\"   -&gt;  not equal; also matches if label is not present \\tlabel in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\tlabel not in { \\\"a\\\", \\\"b\\\", \\\"c\\\", ... }  -&gt;  true if the value of label X is not one of \\\"a\\\", \\\"b\\\", \\\"c\\\" \\thas(label_name)  -&gt; True if that label is present \\t! expr -&gt; negation of expr \\texpr &amp;&amp; expr  -&gt; Short-circuit and \\texpr || expr  -&gt; Short-circuit or \\t( expr ) -&gt; parens for grouping \\tall() or the empty selector -&gt; matches all endpoints. \\n Label names are allowed to contain alphanumerics, -, _ and /. String literals are more permissive but they do not support escape characters. \\n Examples (with made-up labels): \\n \\ttype == \\\"webserver\\\" &amp;&amp; deployment == \\\"prod\\\" \\ttype in {\\\"frontend\\\", \\\"backend\\\"} \\tdeployment != \\\"dev\\\" \\t! has(label_name)\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithserviceaccountselector","title":"fn spec.withServiceAccountSelector","text":"<pre><code>withServiceAccountSelector(serviceAccountSelector)\n</code></pre> <p>\"ServiceAccountSelector is an optional field for an expression used to select a pod based on service accounts.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithtypes","title":"fn spec.withTypes","text":"<pre><code>withTypes(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specwithtypesmixin","title":"fn spec.withTypesMixin","text":"<pre><code>withTypesMixin(types)\n</code></pre> <p>\"Types indicates whether this policy applies to ingress, or to egress, or to both.  When not explicitly specified (and so the value on creation is empty or nil), Calico defaults Types according to what Ingress and Egress are present in the policy.  The default is: \\n - [ PolicyTypeIngress ], if there are no Egress rules (including the case where there are   also no Ingress rules) \\n - [ PolicyTypeEgress ], if there are Egress rules but no Ingress rules \\n - [ PolicyTypeIngress, PolicyTypeEgress ], if there are both Ingress and Egress rules. \\n When the policy is read back again, Types will always be one of these values, never empty or nil.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegress","title":"obj spec.egress","text":"<p>\"The ordered set of egress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresswithaction","title":"fn spec.egress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresswithipversion","title":"fn spec.egress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresswithnotprotocol","title":"fn spec.egress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresswithprotocol","title":"fn spec.egress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegressdestination","title":"obj spec.egress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnamespaceselector","title":"fn spec.egress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnets","title":"fn spec.egress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnetsmixin","title":"fn spec.egress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnets","title":"fn spec.egress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnotnetsmixin","title":"fn spec.egress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnotports","title":"fn spec.egress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnotportsmixin","title":"fn spec.egress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithnotselector","title":"fn spec.egress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithports","title":"fn spec.egress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithportsmixin","title":"fn spec.egress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationwithselector","title":"fn spec.egress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegressdestinationserviceaccounts","title":"obj spec.egress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnames","title":"fn spec.egress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithnamesmixin","title":"fn spec.egress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationserviceaccountswithselector","title":"fn spec.egress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegressdestinationservices","title":"obj spec.egress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithname","title":"fn spec.egress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressdestinationserviceswithnamespace","title":"fn spec.egress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegresshttp","title":"obj spec.egress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresshttpwithmethods","title":"fn spec.egress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresshttpwithmethodsmixin","title":"fn spec.egress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresshttpwithpaths","title":"fn spec.egress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresshttpwithpathsmixin","title":"fn spec.egress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegresshttppaths","title":"obj spec.egress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresshttppathswithexact","title":"fn spec.egress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresshttppathswithprefix","title":"fn spec.egress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegressicmp","title":"obj spec.egress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressicmpwithcode","title":"fn spec.egress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressicmpwithtype","title":"fn spec.egress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegressmetadata","title":"obj spec.egress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressmetadatawithannotations","title":"fn spec.egress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressmetadatawithannotationsmixin","title":"fn spec.egress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegressnoticmp","title":"obj spec.egress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressnoticmpwithcode","title":"fn spec.egress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegressnoticmpwithtype","title":"fn spec.egress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegresssource","title":"obj spec.egress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnamespaceselector","title":"fn spec.egress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnets","title":"fn spec.egress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnetsmixin","title":"fn spec.egress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnotnets","title":"fn spec.egress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnotnetsmixin","title":"fn spec.egress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnotports","title":"fn spec.egress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnotportsmixin","title":"fn spec.egress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithnotselector","title":"fn spec.egress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithports","title":"fn spec.egress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithportsmixin","title":"fn spec.egress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourcewithselector","title":"fn spec.egress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegresssourceserviceaccounts","title":"obj spec.egress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnames","title":"fn spec.egress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithnamesmixin","title":"fn spec.egress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourceserviceaccountswithselector","title":"fn spec.egress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specegresssourceservices","title":"obj spec.egress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourceserviceswithname","title":"fn spec.egress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specegresssourceserviceswithnamespace","title":"fn spec.egress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingress","title":"obj spec.ingress","text":"<p>\"The ordered set of ingress rules.  Each rule contains a set of packet match criteria and a corresponding action to apply.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresswithaction","title":"fn spec.ingress.withAction","text":"<pre><code>withAction(action)\n</code></pre>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresswithipversion","title":"fn spec.ingress.withIpVersion","text":"<pre><code>withIpVersion(ipVersion)\n</code></pre> <p>\"IPVersion is an optional field that restricts the rule to only match a specific IP version.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresswithnotprotocol","title":"fn spec.ingress.withNotProtocol","text":"<pre><code>withNotProtocol(notProtocol)\n</code></pre> <p>\"NotProtocol is the negated version of the Protocol field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresswithprotocol","title":"fn spec.ingress.withProtocol","text":"<pre><code>withProtocol(protocol)\n</code></pre> <p>\"Protocol is an optional field that restricts the rule to only apply to traffic of a specific IP protocol. Required if any of the EntityRules contain Ports (because ports only apply to certain protocols). \\n Must be one of these string values: \\\"TCP\\\", \\\"UDP\\\", \\\"ICMP\\\", \\\"ICMPv6\\\", \\\"SCTP\\\", \\\"UDPLite\\\" or an integer in the range 1-255.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingressdestination","title":"obj spec.ingress.destination","text":"<p>\"Destination contains the match criteria that apply to destination entity.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnamespaceselector","title":"fn spec.ingress.destination.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnets","title":"fn spec.ingress.destination.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnetsmixin","title":"fn spec.ingress.destination.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnets","title":"fn spec.ingress.destination.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnotnetsmixin","title":"fn spec.ingress.destination.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnotports","title":"fn spec.ingress.destination.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnotportsmixin","title":"fn spec.ingress.destination.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithnotselector","title":"fn spec.ingress.destination.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithports","title":"fn spec.ingress.destination.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithportsmixin","title":"fn spec.ingress.destination.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationwithselector","title":"fn spec.ingress.destination.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingressdestinationserviceaccounts","title":"obj spec.ingress.destination.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnames","title":"fn spec.ingress.destination.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithnamesmixin","title":"fn spec.ingress.destination.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationserviceaccountswithselector","title":"fn spec.ingress.destination.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingressdestinationservices","title":"obj spec.ingress.destination.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithname","title":"fn spec.ingress.destination.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressdestinationserviceswithnamespace","title":"fn spec.ingress.destination.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingresshttp","title":"obj spec.ingress.http","text":"<p>\"HTTP contains match criteria that apply to HTTP requests.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresshttpwithmethods","title":"fn spec.ingress.http.withMethods","text":"<pre><code>withMethods(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresshttpwithmethodsmixin","title":"fn spec.ingress.http.withMethodsMixin","text":"<pre><code>withMethodsMixin(methods)\n</code></pre> <p>\"Methods is an optional field that restricts the rule to apply only to HTTP requests that use one of the listed HTTP Methods (e.g. GET, PUT, etc.) Multiple methods are OR'd together.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresshttpwithpaths","title":"fn spec.ingress.http.withPaths","text":"<pre><code>withPaths(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresshttpwithpathsmixin","title":"fn spec.ingress.http.withPathsMixin","text":"<pre><code>withPathsMixin(paths)\n</code></pre> <p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingresshttppaths","title":"obj spec.ingress.http.paths","text":"<p>\"Paths is an optional field that restricts the rule to apply to HTTP requests that use one of the listed HTTP Paths. Multiple paths are OR'd together. e.g: - exact: /foo - prefix: /bar NOTE: Each entry may ONLY specify either a <code>exact</code> or a <code>prefix</code> match. The validator will check for it.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresshttppathswithexact","title":"fn spec.ingress.http.paths.withExact","text":"<pre><code>withExact(exact)\n</code></pre>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresshttppathswithprefix","title":"fn spec.ingress.http.paths.withPrefix","text":"<pre><code>withPrefix(prefix)\n</code></pre>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingressicmp","title":"obj spec.ingress.icmp","text":"<p>\"ICMP is an optional field that restricts the rule to apply to a specific type and code of ICMP traffic.  This should only be specified if the Protocol field is set to \\\"ICMP\\\" or \\\"ICMPv6\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressicmpwithcode","title":"fn spec.ingress.icmp.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressicmpwithtype","title":"fn spec.ingress.icmp.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingressmetadata","title":"obj spec.ingress.metadata","text":"<p>\"Metadata contains additional information for this rule\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressmetadatawithannotations","title":"fn spec.ingress.metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressmetadatawithannotationsmixin","title":"fn spec.ingress.metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is a set of key value pairs that give extra information about the rule\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingressnoticmp","title":"obj spec.ingress.notICMP","text":"<p>\"NotICMP is the negated version of the ICMP field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressnoticmpwithcode","title":"fn spec.ingress.notICMP.withCode","text":"<pre><code>withCode(code)\n</code></pre> <p>\"Match on a specific ICMP code.  If specified, the Type value must also be specified. This is a technical limitation imposed by the kernel's iptables firewall, which Calico uses to enforce the rule.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingressnoticmpwithtype","title":"fn spec.ingress.notICMP.withType","text":"<pre><code>withType(type)\n</code></pre> <p>\"Match on a specific ICMP type.  For example a value of 8 refers to ICMP Echo Request (i.e. pings).\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingresssource","title":"obj spec.ingress.source","text":"<p>\"Source contains the match criteria that apply to source entity.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnamespaceselector","title":"fn spec.ingress.source.withNamespaceSelector","text":"<pre><code>withNamespaceSelector(namespaceSelector)\n</code></pre> <p>\"NamespaceSelector is an optional field that contains a selector expression. Only traffic that originates from (or terminates at) endpoints within the selected namespaces will be matched. When both NamespaceSelector and another selector are defined on the same rule, then only workload endpoints that are matched by both selectors will be selected by the rule. \\n For NetworkPolicy, an empty NamespaceSelector implies that the Selector is limited to selecting only workload endpoints in the same namespace as the NetworkPolicy. \\n For NetworkPolicy, <code>global()</code> NamespaceSelector implies that the Selector is limited to selecting only GlobalNetworkSet or HostEndpoint. \\n For GlobalNetworkPolicy, an empty NamespaceSelector implies the Selector applies to workload endpoints across all namespaces.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnets","title":"fn spec.ingress.source.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnetsmixin","title":"fn spec.ingress.source.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"Nets is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) IP addresses in any of the given subnets.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnotnets","title":"fn spec.ingress.source.withNotNets","text":"<pre><code>withNotNets(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnotnetsmixin","title":"fn spec.ingress.source.withNotNetsMixin","text":"<pre><code>withNotNetsMixin(notNets)\n</code></pre> <p>\"NotNets is the negated version of the Nets field.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnotports","title":"fn spec.ingress.source.withNotPorts","text":"<pre><code>withNotPorts(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnotportsmixin","title":"fn spec.ingress.source.withNotPortsMixin","text":"<pre><code>withNotPortsMixin(notPorts)\n</code></pre> <p>\"NotPorts is the negated version of the Ports field. Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithnotselector","title":"fn spec.ingress.source.withNotSelector","text":"<pre><code>withNotSelector(notSelector)\n</code></pre> <p>\"NotSelector is the negated version of the Selector field.  See Selector field for subtleties with negated selectors.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithports","title":"fn spec.ingress.source.withPorts","text":"<pre><code>withPorts(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithportsmixin","title":"fn spec.ingress.source.withPortsMixin","text":"<pre><code>withPortsMixin(ports)\n</code></pre> <p>\"Ports is an optional field that restricts the rule to only apply to traffic that has a source (destination) port that matches one of these ranges/values. This value is a list of integers or strings that represent ranges of ports. \\n Since only some protocols have ports, if any ports are specified it requires the Protocol match in the Rule to be set to \\\"TCP\\\" or \\\"UDP\\\".\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourcewithselector","title":"fn spec.ingress.source.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that contains a selector expression (see Policy for sample syntax).  Only traffic that originates from (terminates at) endpoints matching the selector will be matched. \\n Note that: in addition to the negated version of the Selector (see NotSelector below), the selector expression syntax itself supports negation.  The two types of negation are subtly different. One negates the set of matched endpoints, the other negates the whole match: \\n \\tSelector = \\\"!has(my_label)\\\" matches packets that are from other Calico-controlled \\tendpoints that do not have the label \\\"my_label\\\". \\n \\tNotSelector = \\\"has(my_label)\\\" matches packets that are not from Calico-controlled \\tendpoints that do have the label \\\"my_label\\\". \\n The effect is that the latter will accept packets from non-Calico sources whereas the former is limited to packets from Calico-controlled endpoints.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingresssourceserviceaccounts","title":"obj spec.ingress.source.serviceAccounts","text":"<p>\"ServiceAccounts is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a matching service account.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnames","title":"fn spec.ingress.source.serviceAccounts.withNames","text":"<pre><code>withNames(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithnamesmixin","title":"fn spec.ingress.source.serviceAccounts.withNamesMixin","text":"<pre><code>withNamesMixin(names)\n</code></pre> <p>\"Names is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account whose name is in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourceserviceaccountswithselector","title":"fn spec.ingress.source.serviceAccounts.withSelector","text":"<pre><code>withSelector(selector)\n</code></pre> <p>\"Selector is an optional field that restricts the rule to only apply to traffic that originates from (or terminates at) a pod running as a service account that matches the given label selector. If both Names and Selector are specified then they are AND'ed.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#obj-specingresssourceservices","title":"obj spec.ingress.source.services","text":"<p>\"Services is an optional field that contains options for matching Kubernetes Services. If specified, only traffic that originates from or terminates at endpoints within the selected service(s) will be matched, and only to/from each endpoint's port. \\n Services cannot be specified on the same rule as Selector, NotSelector, NamespaceSelector, Nets, NotNets or ServiceAccounts. \\n Ports and NotPorts can only be specified with Services on ingress rules.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourceserviceswithname","title":"fn spec.ingress.source.services.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name specifies the name of a Kubernetes Service to match.\"</p>"},{"location":"3.25/crd/v1/networkPolicy/#fn-specingresssourceserviceswithnamespace","title":"fn spec.ingress.source.services.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace specifies the namespace of the given Service. If left empty, the rule will match within this policy's namespace.\"</p>"},{"location":"3.25/crd/v1/networkSet/","title":"crd.v1.networkSet","text":"<p>\"NetworkSet is the Namespaced-equivalent of the GlobalNetworkSet.\"</p>"},{"location":"3.25/crd/v1/networkSet/#index","title":"Index","text":"<ul> <li><code>fn new(name)</code></li> <li><code>obj metadata</code><ul> <li><code>fn withAnnotations(annotations)</code></li> <li><code>fn withAnnotationsMixin(annotations)</code></li> <li><code>fn withClusterName(clusterName)</code></li> <li><code>fn withCreationTimestamp(creationTimestamp)</code></li> <li><code>fn withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)</code></li> <li><code>fn withDeletionTimestamp(deletionTimestamp)</code></li> <li><code>fn withFinalizers(finalizers)</code></li> <li><code>fn withFinalizersMixin(finalizers)</code></li> <li><code>fn withGenerateName(generateName)</code></li> <li><code>fn withGeneration(generation)</code></li> <li><code>fn withLabels(labels)</code></li> <li><code>fn withLabelsMixin(labels)</code></li> <li><code>fn withName(name)</code></li> <li><code>fn withNamespace(namespace)</code></li> <li><code>fn withOwnerReferences(ownerReferences)</code></li> <li><code>fn withOwnerReferencesMixin(ownerReferences)</code></li> <li><code>fn withResourceVersion(resourceVersion)</code></li> <li><code>fn withSelfLink(selfLink)</code></li> <li><code>fn withUid(uid)</code></li> </ul> </li> <li><code>obj spec</code><ul> <li><code>fn withNets(nets)</code></li> <li><code>fn withNetsMixin(nets)</code></li> </ul> </li> </ul>"},{"location":"3.25/crd/v1/networkSet/#fields","title":"Fields","text":""},{"location":"3.25/crd/v1/networkSet/#fn-new","title":"fn new","text":"<pre><code>new(name)\n</code></pre> <p>new returns an instance of NetworkSet</p>"},{"location":"3.25/crd/v1/networkSet/#obj-metadata","title":"obj metadata","text":"<p>\"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithannotations","title":"fn metadata.withAnnotations","text":"<pre><code>withAnnotations(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithannotationsmixin","title":"fn metadata.withAnnotationsMixin","text":"<pre><code>withAnnotationsMixin(annotations)\n</code></pre> <p>\"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithclustername","title":"fn metadata.withClusterName","text":"<pre><code>withClusterName(clusterName)\n</code></pre> <p>\"The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithcreationtimestamp","title":"fn metadata.withCreationTimestamp","text":"<pre><code>withCreationTimestamp(creationTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithdeletiongraceperiodseconds","title":"fn metadata.withDeletionGracePeriodSeconds","text":"<pre><code>withDeletionGracePeriodSeconds(deletionGracePeriodSeconds)\n</code></pre> <p>\"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithdeletiontimestamp","title":"fn metadata.withDeletionTimestamp","text":"<pre><code>withDeletionTimestamp(deletionTimestamp)\n</code></pre> <p>\"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithfinalizers","title":"fn metadata.withFinalizers","text":"<pre><code>withFinalizers(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithfinalizersmixin","title":"fn metadata.withFinalizersMixin","text":"<pre><code>withFinalizersMixin(finalizers)\n</code></pre> <p>\"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithgeneratename","title":"fn metadata.withGenerateName","text":"<pre><code>withGenerateName(generateName)\n</code></pre> <p>\"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\\n\\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\\n\\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithgeneration","title":"fn metadata.withGeneration","text":"<pre><code>withGeneration(generation)\n</code></pre> <p>\"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithlabels","title":"fn metadata.withLabels","text":"<pre><code>withLabels(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithlabelsmixin","title":"fn metadata.withLabelsMixin","text":"<pre><code>withLabelsMixin(labels)\n</code></pre> <p>\"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithname","title":"fn metadata.withName","text":"<pre><code>withName(name)\n</code></pre> <p>\"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithnamespace","title":"fn metadata.withNamespace","text":"<pre><code>withNamespace(namespace)\n</code></pre> <p>\"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \\\"default\\\" namespace, but \\\"default\\\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\\n\\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithownerreferences","title":"fn metadata.withOwnerReferences","text":"<pre><code>withOwnerReferences(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithownerreferencesmixin","title":"fn metadata.withOwnerReferencesMixin","text":"<pre><code>withOwnerReferencesMixin(ownerReferences)\n</code></pre> <p>\"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.\"</p> <p>Note: This function appends passed data to existing values</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithresourceversion","title":"fn metadata.withResourceVersion","text":"<pre><code>withResourceVersion(resourceVersion)\n</code></pre> <p>\"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\\n\\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithselflink","title":"fn metadata.withSelfLink","text":"<pre><code>withSelfLink(selfLink)\n</code></pre> <p>\"SelfLink is a URL representing this object. Populated by the system. Read-only.\\n\\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-metadatawithuid","title":"fn metadata.withUid","text":"<pre><code>withUid(uid)\n</code></pre> <p>\"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\\n\\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\"</p>"},{"location":"3.25/crd/v1/networkSet/#obj-spec","title":"obj spec","text":"<p>\"NetworkSetSpec contains the specification for a NetworkSet resource.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-specwithnets","title":"fn spec.withNets","text":"<pre><code>withNets(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p>"},{"location":"3.25/crd/v1/networkSet/#fn-specwithnetsmixin","title":"fn spec.withNetsMixin","text":"<pre><code>withNetsMixin(nets)\n</code></pre> <p>\"The list of IP networks that belong to this set.\"</p> <p>Note: This function appends passed data to existing values</p>"}]}